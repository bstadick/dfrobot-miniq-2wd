
line.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000012a  00800100  0000197a  00001a0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000197a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080022a  0080022a  00001b38  2**0
                  ALLOC
  3 .debug_aranges 00000180  00000000  00000000  00001b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000291  00000000  00000000  00001cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000235b  00000000  00000000  00001f49  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000012dc  00000000  00000000  000042a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000014bd  00000000  00000000  00005580  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000220  00000000  00000000  00006a40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f4  00000000  00000000  00006c60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009b5  00000000  00000000  00007054  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  00007a09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_21>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e7       	ldi	r30, 0x7A	; 122
      7c:	f9 e1       	ldi	r31, 0x19	; 25
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	aa 32       	cpi	r26, 0x2A	; 42
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	12 e0       	ldi	r17, 0x02	; 2
      8c:	aa e2       	ldi	r26, 0x2A	; 42
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a8 33       	cpi	r26, 0x38	; 56
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 06 	call	0xca6	; 0xca6 <main>
      9e:	0c 94 bb 0c 	jmp	0x1976	; 0x1976 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <pwm_init>:
unsigned char *p;

//pwm初始化子函数
void pwm_init(void)
{ 
	TCCR0A = 0XA3;      
      a6:	83 ea       	ldi	r24, 0xA3	; 163
      a8:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0X03;//时钟源设置为clk/64
      aa:	83 e0       	ldi	r24, 0x03	; 3
      ac:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 0X00; //初值设置为0
      ae:	16 bc       	out	0x26, r1	; 38
	TIMSK0 = 0X00;//禁止中断    
      b0:	10 92 6e 00 	sts	0x006E, r1
}
      b4:	08 95       	ret

000000b6 <Motor_Control>:
//控制电机转动
void Motor_Control(int M1_DIR,int M1_EN,int M2_DIR,int M2_EN)
{
  //////////M1////////////////////////
  if(M1_DIR==FORW)//M1电机方向  
      b6:	01 97       	sbiw	r24, 0x01	; 1
      b8:	11 f4       	brne	.+4      	; 0xbe <Motor_Control+0x8>
    PORTD |=(1<<7);//设置向前
      ba:	5f 9a       	sbi	0x0b, 7	; 11
      bc:	01 c0       	rjmp	.+2      	; 0xc0 <Motor_Control+0xa>
  else
    PORTD &=~(1<<7);//设置向后   
      be:	5f 98       	cbi	0x0b, 7	; 11
  if(M1_EN==0)//M1电机速度 
      c0:	61 15       	cp	r22, r1
      c2:	71 05       	cpc	r23, r1
      c4:	11 f4       	brne	.+4      	; 0xca <Motor_Control+0x14>
	OCR0A = 0;//停止
      c6:	17 bc       	out	0x27, r1	; 39
      c8:	01 c0       	rjmp	.+2      	; 0xcc <Motor_Control+0x16>
  else
    OCR0A = M1_EN;//设置给定的数值
      ca:	67 bd       	out	0x27, r22	; 39

  ///////////M2//////////////////////
  if(M2_DIR==FORW)//M2电机的方向  
      cc:	41 30       	cpi	r20, 0x01	; 1
      ce:	51 05       	cpc	r21, r1
      d0:	11 f4       	brne	.+4      	; 0xd6 <Motor_Control+0x20>
    PORTD |=(1<<4);//设置向前 
      d2:	5c 9a       	sbi	0x0b, 4	; 11
      d4:	01 c0       	rjmp	.+2      	; 0xd8 <Motor_Control+0x22>
  else
    PORTD &=~(1<<4);//设置向后   
      d6:	5c 98       	cbi	0x0b, 4	; 11
  if(M2_EN==0) //M2电机的速度
      d8:	21 15       	cp	r18, r1
      da:	31 05       	cpc	r19, r1
      dc:	11 f4       	brne	.+4      	; 0xe2 <Motor_Control+0x2c>
    OCR0B = 0;//停止
      de:	18 bc       	out	0x28, r1	; 40
      e0:	08 95       	ret
  else
    OCR0B = M2_EN;//设置给定的数值
      e2:	28 bd       	out	0x28, r18	; 40
      e4:	08 95       	ret

000000e6 <adc_init>:
}
//ad转换初始化函数
void adc_init(int channel)
{
    //设置ad转换寄存器
	ADMUX =channel;
      e6:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = 0Xcb; 
      ea:	8b ec       	ldi	r24, 0xCB	; 203
      ec:	80 93 7a 00 	sts	0x007A, r24
}
      f0:	08 95       	ret

000000f2 <__vector_21>:
//ad转换中断函数
ISR(ADC_vect)
{
      f2:	1f 92       	push	r1
      f4:	0f 92       	push	r0
      f6:	0f b6       	in	r0, 0x3f	; 63
      f8:	0f 92       	push	r0
      fa:	11 24       	eor	r1, r1
      fc:	df 92       	push	r13
      fe:	ef 92       	push	r14
     100:	ff 92       	push	r15
     102:	0f 93       	push	r16
     104:	1f 93       	push	r17
     106:	2f 93       	push	r18
     108:	3f 93       	push	r19
     10a:	4f 93       	push	r20
     10c:	5f 93       	push	r21
     10e:	6f 93       	push	r22
     110:	7f 93       	push	r23
     112:	8f 93       	push	r24
     114:	9f 93       	push	r25
     116:	af 93       	push	r26
     118:	bf 93       	push	r27
     11a:	ef 93       	push	r30
     11c:	ff 93       	push	r31
   ADCSRA &=~ (1<<ADEN);      //关中断
     11e:	80 91 7a 00 	lds	r24, 0x007A
     122:	8f 77       	andi	r24, 0x7F	; 127
     124:	80 93 7a 00 	sts	0x007A, r24
   data_ = ADCL;               //接收第八位值
     128:	60 91 78 00 	lds	r22, 0x0078
   data_  = data_+ADCH*256;    //整个adc的数字值
     12c:	d0 90 79 00 	lds	r13, 0x0079
   data_  = ((data_*Vr)/1024); //转换成模拟值
     130:	70 e0       	ldi	r23, 0x00	; 0
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	0e 94 00 0a 	call	0x1400	; 0x1400 <__floatunsisf>
     13a:	7b 01       	movw	r14, r22
     13c:	8c 01       	movw	r16, r24
     13e:	7d 2d       	mov	r23, r13
     140:	60 e0       	ldi	r22, 0x00	; 0
     142:	88 27       	eor	r24, r24
     144:	77 fd       	sbrc	r23, 7
     146:	80 95       	com	r24
     148:	98 2f       	mov	r25, r24
     14a:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     14e:	9b 01       	movw	r18, r22
     150:	ac 01       	movw	r20, r24
     152:	c8 01       	movw	r24, r16
     154:	b7 01       	movw	r22, r14
     156:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__addsf3>
     15a:	20 e0       	ldi	r18, 0x00	; 0
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	40 ea       	ldi	r20, 0xA0	; 160
     160:	50 e4       	ldi	r21, 0x40	; 64
     162:	0e 94 18 08 	call	0x1030	; 0x1030 <__mulsf3>
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	40 e8       	ldi	r20, 0x80	; 128
     16c:	5a e3       	ldi	r21, 0x3A	; 58
     16e:	0e 94 18 08 	call	0x1030	; 0x1030 <__mulsf3>
     172:	7b 01       	movw	r14, r22
     174:	8c 01       	movw	r16, r24
     176:	cb 01       	movw	r24, r22
     178:	d8 01       	movw	r26, r16
     17a:	80 93 34 02 	sts	0x0234, r24
     17e:	90 93 35 02 	sts	0x0235, r25
     182:	a0 93 36 02 	sts	0x0236, r26
     186:	b0 93 37 02 	sts	0x0237, r27
   switch(ADMUX)
     18a:	80 91 7c 00 	lds	r24, 0x007C
     18e:	84 34       	cpi	r24, 0x44	; 68
     190:	09 f4       	brne	.+2      	; 0x194 <__vector_21+0xa2>
     192:	41 c0       	rjmp	.+130    	; 0x216 <__vector_21+0x124>
     194:	85 34       	cpi	r24, 0x45	; 69
     196:	50 f4       	brcc	.+20     	; 0x1ac <__vector_21+0xba>
     198:	82 34       	cpi	r24, 0x42	; 66
     19a:	39 f1       	breq	.+78     	; 0x1ea <__vector_21+0xf8>
     19c:	83 34       	cpi	r24, 0x43	; 67
     19e:	80 f5       	brcc	.+96     	; 0x200 <__vector_21+0x10e>
     1a0:	80 34       	cpi	r24, 0x40	; 64
     1a2:	69 f0       	breq	.+26     	; 0x1be <__vector_21+0xcc>
     1a4:	81 34       	cpi	r24, 0x41	; 65
     1a6:	09 f0       	breq	.+2      	; 0x1aa <__vector_21+0xb8>
     1a8:	61 c0       	rjmp	.+194    	; 0x26c <__vector_21+0x17a>
     1aa:	14 c0       	rjmp	.+40     	; 0x1d4 <__vector_21+0xe2>
     1ac:	86 34       	cpi	r24, 0x46	; 70
     1ae:	09 f4       	brne	.+2      	; 0x1b2 <__vector_21+0xc0>
     1b0:	48 c0       	rjmp	.+144    	; 0x242 <__vector_21+0x150>
     1b2:	86 34       	cpi	r24, 0x46	; 70
     1b4:	d8 f1       	brcs	.+118    	; 0x22c <__vector_21+0x13a>
     1b6:	87 34       	cpi	r24, 0x47	; 71
     1b8:	09 f0       	breq	.+2      	; 0x1bc <__vector_21+0xca>
     1ba:	58 c0       	rjmp	.+176    	; 0x26c <__vector_21+0x17a>
     1bc:	4d c0       	rjmp	.+154    	; 0x258 <__vector_21+0x166>
   {
        case 0x40:
		          data[0] = data_;
     1be:	c7 01       	movw	r24, r14
     1c0:	d8 01       	movw	r26, r16
     1c2:	80 93 00 01 	sts	0x0100, r24
     1c6:	90 93 01 01 	sts	0x0101, r25
     1ca:	a0 93 02 01 	sts	0x0102, r26
     1ce:	b0 93 03 01 	sts	0x0103, r27
     1d2:	4c c0       	rjmp	.+152    	; 0x26c <__vector_21+0x17a>
				  break;
	    case 0x41:
		          data[1] = data_;
     1d4:	c7 01       	movw	r24, r14
     1d6:	d8 01       	movw	r26, r16
     1d8:	80 93 04 01 	sts	0x0104, r24
     1dc:	90 93 05 01 	sts	0x0105, r25
     1e0:	a0 93 06 01 	sts	0x0106, r26
     1e4:	b0 93 07 01 	sts	0x0107, r27
     1e8:	41 c0       	rjmp	.+130    	; 0x26c <__vector_21+0x17a>
				  break;
	    case 0x42:
		          data[2] = data_;
     1ea:	c7 01       	movw	r24, r14
     1ec:	d8 01       	movw	r26, r16
     1ee:	80 93 08 01 	sts	0x0108, r24
     1f2:	90 93 09 01 	sts	0x0109, r25
     1f6:	a0 93 0a 01 	sts	0x010A, r26
     1fa:	b0 93 0b 01 	sts	0x010B, r27
     1fe:	36 c0       	rjmp	.+108    	; 0x26c <__vector_21+0x17a>
				  break;
	    case 0x43:
		          data[3] = data_;
     200:	c7 01       	movw	r24, r14
     202:	d8 01       	movw	r26, r16
     204:	80 93 0c 01 	sts	0x010C, r24
     208:	90 93 0d 01 	sts	0x010D, r25
     20c:	a0 93 0e 01 	sts	0x010E, r26
     210:	b0 93 0f 01 	sts	0x010F, r27
     214:	2b c0       	rjmp	.+86     	; 0x26c <__vector_21+0x17a>
				  break;
		case 0x44:
		          data[4] = data_;
     216:	c7 01       	movw	r24, r14
     218:	d8 01       	movw	r26, r16
     21a:	80 93 10 01 	sts	0x0110, r24
     21e:	90 93 11 01 	sts	0x0111, r25
     222:	a0 93 12 01 	sts	0x0112, r26
     226:	b0 93 13 01 	sts	0x0113, r27
     22a:	20 c0       	rjmp	.+64     	; 0x26c <__vector_21+0x17a>
				  break;
		case 0x45:
		          data[5] = data_;
     22c:	c7 01       	movw	r24, r14
     22e:	d8 01       	movw	r26, r16
     230:	80 93 14 01 	sts	0x0114, r24
     234:	90 93 15 01 	sts	0x0115, r25
     238:	a0 93 16 01 	sts	0x0116, r26
     23c:	b0 93 17 01 	sts	0x0117, r27
     240:	15 c0       	rjmp	.+42     	; 0x26c <__vector_21+0x17a>
				  break;
		case 0x46:
		          data[6] = data_;
     242:	c7 01       	movw	r24, r14
     244:	d8 01       	movw	r26, r16
     246:	80 93 18 01 	sts	0x0118, r24
     24a:	90 93 19 01 	sts	0x0119, r25
     24e:	a0 93 1a 01 	sts	0x011A, r26
     252:	b0 93 1b 01 	sts	0x011B, r27
     256:	0a c0       	rjmp	.+20     	; 0x26c <__vector_21+0x17a>
				  break;
		case 0x47:
		          data[7] = data_;
     258:	c7 01       	movw	r24, r14
     25a:	d8 01       	movw	r26, r16
     25c:	80 93 1c 01 	sts	0x011C, r24
     260:	90 93 1d 01 	sts	0x011D, r25
     264:	a0 93 1e 01 	sts	0x011E, r26
     268:	b0 93 1f 01 	sts	0x011F, r27
				  break;
   }
   if(++channel==0x48)//换通道
     26c:	80 91 20 01 	lds	r24, 0x0120
     270:	8f 5f       	subi	r24, 0xFF	; 255
     272:	80 93 20 01 	sts	0x0120, r24
     276:	88 34       	cpi	r24, 0x48	; 72
     278:	19 f4       	brne	.+6      	; 0x280 <__vector_21+0x18e>
   	{
   		  channel = 0x40;
     27a:	80 e4       	ldi	r24, 0x40	; 64
     27c:	80 93 20 01 	sts	0x0120, r24
   	}
    adc_init(channel);
     280:	80 91 20 01 	lds	r24, 0x0120
}
//ad转换初始化函数
void adc_init(int channel)
{
    //设置ad转换寄存器
	ADMUX =channel;
     284:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = 0Xcb; 
     288:	8b ec       	ldi	r24, 0xCB	; 203
     28a:	80 93 7a 00 	sts	0x007A, r24
   if(++channel==0x48)//换通道
   	{
   		  channel = 0x40;
   	}
    adc_init(channel);
}
     28e:	ff 91       	pop	r31
     290:	ef 91       	pop	r30
     292:	bf 91       	pop	r27
     294:	af 91       	pop	r26
     296:	9f 91       	pop	r25
     298:	8f 91       	pop	r24
     29a:	7f 91       	pop	r23
     29c:	6f 91       	pop	r22
     29e:	5f 91       	pop	r21
     2a0:	4f 91       	pop	r20
     2a2:	3f 91       	pop	r19
     2a4:	2f 91       	pop	r18
     2a6:	1f 91       	pop	r17
     2a8:	0f 91       	pop	r16
     2aa:	ff 90       	pop	r15
     2ac:	ef 90       	pop	r14
     2ae:	df 90       	pop	r13
     2b0:	0f 90       	pop	r0
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	0f 90       	pop	r0
     2b6:	1f 90       	pop	r1
     2b8:	18 95       	reti

000002ba <value_adjust>:
	}
}
//电压值调整函数
void value_adjust(char num)
{
     if(num==1)
     2ba:	81 30       	cpi	r24, 0x01	; 1
     2bc:	a1 f4       	brne	.+40     	; 0x2e6 <value_adjust+0x2c>
	 {
	    if(data[0]>value[0])
     2be:	60 91 2d 02 	lds	r22, 0x022D
     2c2:	70 e0       	ldi	r23, 0x00	; 0
     2c4:	88 27       	eor	r24, r24
     2c6:	77 fd       	sbrc	r23, 7
     2c8:	80 95       	com	r24
     2ca:	98 2f       	mov	r25, r24
     2cc:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     2d0:	9b 01       	movw	r18, r22
     2d2:	ac 01       	movw	r20, r24
     2d4:	60 91 00 01 	lds	r22, 0x0100
     2d8:	70 91 01 01 	lds	r23, 0x0101
     2dc:	80 91 02 01 	lds	r24, 0x0102
     2e0:	90 91 03 01 	lds	r25, 0x0103
     2e4:	41 c0       	rjmp	.+130    	; 0x368 <value_adjust+0xae>
        {
		   PORTB |=(1<<5); //当前值大绿灯亮
		   PORTB &=~(1<<4);
        } 
	 }
	 if(num==2)
     2e6:	82 30       	cpi	r24, 0x02	; 2
     2e8:	a1 f4       	brne	.+40     	; 0x312 <value_adjust+0x58>
	 {
	    if(data[1]>value[1])
     2ea:	60 91 2e 02 	lds	r22, 0x022E
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	88 27       	eor	r24, r24
     2f2:	77 fd       	sbrc	r23, 7
     2f4:	80 95       	com	r24
     2f6:	98 2f       	mov	r25, r24
     2f8:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     2fc:	9b 01       	movw	r18, r22
     2fe:	ac 01       	movw	r20, r24
     300:	60 91 04 01 	lds	r22, 0x0104
     304:	70 91 05 01 	lds	r23, 0x0105
     308:	80 91 06 01 	lds	r24, 0x0106
     30c:	90 91 07 01 	lds	r25, 0x0107
     310:	2b c0       	rjmp	.+86     	; 0x368 <value_adjust+0xae>
        {
		   PORTB |=(1<<5); //当前值大绿灯亮
		   PORTB &=~(1<<4);
        } 
	 }
	 if(num==3)
     312:	83 30       	cpi	r24, 0x03	; 3
     314:	a1 f4       	brne	.+40     	; 0x33e <value_adjust+0x84>
	 {
	    if(data[2]>value[2])
     316:	60 91 2f 02 	lds	r22, 0x022F
     31a:	70 e0       	ldi	r23, 0x00	; 0
     31c:	88 27       	eor	r24, r24
     31e:	77 fd       	sbrc	r23, 7
     320:	80 95       	com	r24
     322:	98 2f       	mov	r25, r24
     324:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     328:	9b 01       	movw	r18, r22
     32a:	ac 01       	movw	r20, r24
     32c:	60 91 08 01 	lds	r22, 0x0108
     330:	70 91 09 01 	lds	r23, 0x0109
     334:	80 91 0a 01 	lds	r24, 0x010A
     338:	90 91 0b 01 	lds	r25, 0x010B
     33c:	15 c0       	rjmp	.+42     	; 0x368 <value_adjust+0xae>
        {
		   PORTB |=(1<<5); //当前值大绿灯亮
		   PORTB &=~(1<<4);
        } 
	 }
	 if(num==4)
     33e:	84 30       	cpi	r24, 0x04	; 4
     340:	d1 f4       	brne	.+52     	; 0x376 <value_adjust+0xbc>
	 {
	    if(data[3]>value[3])
     342:	60 91 30 02 	lds	r22, 0x0230
     346:	70 e0       	ldi	r23, 0x00	; 0
     348:	88 27       	eor	r24, r24
     34a:	77 fd       	sbrc	r23, 7
     34c:	80 95       	com	r24
     34e:	98 2f       	mov	r25, r24
     350:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     354:	9b 01       	movw	r18, r22
     356:	ac 01       	movw	r20, r24
     358:	60 91 0c 01 	lds	r22, 0x010C
     35c:	70 91 0d 01 	lds	r23, 0x010D
     360:	80 91 0e 01 	lds	r24, 0x010E
     364:	90 91 0f 01 	lds	r25, 0x010F
     368:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     36c:	18 16       	cp	r1, r24
     36e:	e4 f0       	brlt	.+56     	; 0x3a8 <value_adjust+0xee>
		   PORTB |=(1<<4); //当前值小红灯亮
		   PORTB &=~(1<<5);
        }
        else
        {
		   PORTB |=(1<<5); //当前值大绿灯亮
     370:	2d 9a       	sbi	0x05, 5	; 5
		   PORTB &=~(1<<4);
     372:	2c 98       	cbi	0x05, 4	; 5
     374:	08 95       	ret
        } 
	 }
	 if(num==5)
     376:	85 30       	cpi	r24, 0x05	; 5
     378:	e1 f4       	brne	.+56     	; 0x3b2 <value_adjust+0xf8>
	 {
	    if(data[4]>value[4])
     37a:	60 91 31 02 	lds	r22, 0x0231
     37e:	70 e0       	ldi	r23, 0x00	; 0
     380:	88 27       	eor	r24, r24
     382:	77 fd       	sbrc	r23, 7
     384:	80 95       	com	r24
     386:	98 2f       	mov	r25, r24
     388:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     38c:	9b 01       	movw	r18, r22
     38e:	ac 01       	movw	r20, r24
     390:	60 91 10 01 	lds	r22, 0x0110
     394:	70 91 11 01 	lds	r23, 0x0111
     398:	80 91 12 01 	lds	r24, 0x0112
     39c:	90 91 13 01 	lds	r25, 0x0113
     3a0:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     3a4:	18 16       	cp	r1, r24
     3a6:	1c f4       	brge	.+6      	; 0x3ae <value_adjust+0xf4>
        {
		   PORTB |=(1<<4); //当前值小红灯亮
     3a8:	2c 9a       	sbi	0x05, 4	; 5
		   PORTB &=~(1<<5);
     3aa:	2d 98       	cbi	0x05, 5	; 5
     3ac:	08 95       	ret
        }
        else
        {
		   PORTB |=(1<<5); //当前值大绿灯亮
     3ae:	2d 9a       	sbi	0x05, 5	; 5
		   PORTB &=~(1<<4);
     3b0:	2c 98       	cbi	0x05, 4	; 5
     3b2:	08 95       	ret

000003b4 <buzzer>:
        } 
	 }
}
//蜂鸣器
void buzzer(void)
{
     3b4:	90 e0       	ldi	r25, 0x00	; 0
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     3b6:	35 e3       	ldi	r19, 0x35	; 53
     char k=0;
	 for(k=0;k<5;k++)
	 {
	     PORTB |= (1<<3);
     3b8:	25 ed       	ldi	r18, 0xD5	; 213
     3ba:	2b 9a       	sbi	0x05, 3	; 5
     3bc:	83 2f       	mov	r24, r19
     3be:	8a 95       	dec	r24
     3c0:	f1 f7       	brne	.-4      	; 0x3be <buzzer+0xa>
		 _delay_us(10);
		 PORTB &= ~(1<<3);
     3c2:	2b 98       	cbi	0x05, 3	; 5
     3c4:	82 2f       	mov	r24, r18
     3c6:	8a 95       	dec	r24
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <buzzer+0x12>
}
//蜂鸣器
void buzzer(void)
{
     char k=0;
	 for(k=0;k<5;k++)
     3ca:	9f 5f       	subi	r25, 0xFF	; 255
     3cc:	95 30       	cpi	r25, 0x05	; 5
     3ce:	a9 f7       	brne	.-22     	; 0x3ba <buzzer+0x6>
	     PORTB |= (1<<3);
		 _delay_us(10);
		 PORTB &= ~(1<<3);
		 _delay_us(40);
	 }
}
     3d0:	08 95       	ret

000003d2 <key_scan>:
//按键扫描
void key_scan(void)//按键扫描
{
     3d2:	ef 92       	push	r14
     3d4:	ff 92       	push	r15
     3d6:	0f 93       	push	r16
     3d8:	1f 93       	push	r17
  int i;
  *p=0X0A;
     3da:	e0 91 32 02 	lds	r30, 0x0232
     3de:	f0 91 33 02 	lds	r31, 0x0233
     3e2:	8a e0       	ldi	r24, 0x0A	; 10
     3e4:	80 83       	st	Z, r24
  if(data[5]>4.50&&data[5]<6.00)//没有按键按下
     3e6:	e0 90 14 01 	lds	r14, 0x0114
     3ea:	f0 90 15 01 	lds	r15, 0x0115
     3ee:	00 91 16 01 	lds	r16, 0x0116
     3f2:	10 91 17 01 	lds	r17, 0x0117
     3f6:	c8 01       	movw	r24, r16
     3f8:	b7 01       	movw	r22, r14
     3fa:	20 e0       	ldi	r18, 0x00	; 0
     3fc:	30 e0       	ldi	r19, 0x00	; 0
     3fe:	40 e9       	ldi	r20, 0x90	; 144
     400:	50 e4       	ldi	r21, 0x40	; 64
     402:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     406:	18 16       	cp	r1, r24
     408:	54 f4       	brge	.+20     	; 0x41e <key_scan+0x4c>
     40a:	c8 01       	movw	r24, r16
     40c:	b7 01       	movw	r22, r14
     40e:	20 e0       	ldi	r18, 0x00	; 0
     410:	30 e0       	ldi	r19, 0x00	; 0
     412:	40 ec       	ldi	r20, 0xC0	; 192
     414:	50 e4       	ldi	r21, 0x40	; 64
     416:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     41a:	87 fd       	sbrc	r24, 7
     41c:	99 c0       	rjmp	.+306    	; 0x550 <key_scan+0x17e>
    return;//返回
  else
  {
    if(data[5]>=0.00&&data[5]<0.50)//按键1按下
     41e:	c8 01       	movw	r24, r16
     420:	b7 01       	movw	r22, r14
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	40 e0       	ldi	r20, 0x00	; 0
     428:	50 e0       	ldi	r21, 0x00	; 0
     42a:	0e 94 42 09 	call	0x1284	; 0x1284 <__gesf2>
     42e:	88 23       	and	r24, r24
     430:	c4 f1       	brlt	.+112    	; 0x4a2 <key_scan+0xd0>
     432:	c8 01       	movw	r24, r16
     434:	b7 01       	movw	r22, r14
     436:	20 e0       	ldi	r18, 0x00	; 0
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	40 e0       	ldi	r20, 0x00	; 0
     43c:	5f e3       	ldi	r21, 0x3F	; 63
     43e:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     442:	88 23       	and	r24, r24
     444:	74 f5       	brge	.+92     	; 0x4a2 <key_scan+0xd0>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     446:	80 e2       	ldi	r24, 0x20	; 32
     448:	9e e4       	ldi	r25, 0x4E	; 78
     44a:	01 97       	sbiw	r24, 0x01	; 1
     44c:	f1 f7       	brne	.-4      	; 0x44a <key_scan+0x78>
    {
       _delay_ms(5);//延时消抖
      if(data[5]>=0.00&&data[5]<0.50)//按键1确实按下
      {
        buzzer();//蜂鸣器响
     44e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <buzzer>
        key_1++;//按键1计数
     452:	80 91 2a 02 	lds	r24, 0x022A
     456:	98 2f       	mov	r25, r24
     458:	9f 5f       	subi	r25, 0xFF	; 255
     45a:	90 93 2a 02 	sts	0x022A, r25
        if(key_1>=1&&key_1<=5) value_adjust(key_1);//寻线传感器的值调整
     45e:	85 30       	cpi	r24, 0x05	; 5
     460:	18 f4       	brcc	.+6      	; 0x468 <key_scan+0x96>
     462:	89 2f       	mov	r24, r25
     464:	0e 94 5d 01 	call	0x2ba	; 0x2ba <value_adjust>
        if(key_1==6)
     468:	80 91 2a 02 	lds	r24, 0x022A
     46c:	86 30       	cpi	r24, 0x06	; 6
     46e:	09 f0       	breq	.+2      	; 0x472 <key_scan+0xa0>
     470:	6f c0       	rjmp	.+222    	; 0x550 <key_scan+0x17e>
        {
          PORTB &=~(1<<5);//绿灯灭
     472:	2d 98       	cbi	0x05, 5	; 5
          PORTB &=~(1<<4);//红灯灭
     474:	2c 98       	cbi	0x05, 4	; 5
     476:	00 e0       	ldi	r16, 0x00	; 0
     478:	10 e0       	ldi	r17, 0x00	; 0
          //将设置好的电压值存入EEPROM，做到掉电保护
          for(i=0;i<5;i++)
		  {
            eeprom_busy_wait();
     47a:	f9 99       	sbic	0x1f, 1	; 31
     47c:	fe cf       	rjmp	.-4      	; 0x47a <key_scan+0xa8>
		    eeprom_write_byte(p+i,value[i]);
     47e:	80 91 32 02 	lds	r24, 0x0232
     482:	90 91 33 02 	lds	r25, 0x0233
     486:	f8 01       	movw	r30, r16
     488:	e3 5d       	subi	r30, 0xD3	; 211
     48a:	fd 4f       	sbci	r31, 0xFD	; 253
     48c:	80 0f       	add	r24, r16
     48e:	91 1f       	adc	r25, r17
     490:	60 81       	ld	r22, Z
     492:	0e 94 ad 0c 	call	0x195a	; 0x195a <__eewr_byte_m328p>
        if(key_1==6)
        {
          PORTB &=~(1<<5);//绿灯灭
          PORTB &=~(1<<4);//红灯灭
          //将设置好的电压值存入EEPROM，做到掉电保护
          for(i=0;i<5;i++)
     496:	0f 5f       	subi	r16, 0xFF	; 255
     498:	1f 4f       	sbci	r17, 0xFF	; 255
     49a:	05 30       	cpi	r16, 0x05	; 5
     49c:	11 05       	cpc	r17, r1
     49e:	69 f7       	brne	.-38     	; 0x47a <key_scan+0xa8>
     4a0:	57 c0       	rjmp	.+174    	; 0x550 <key_scan+0x17e>
		    eeprom_write_byte(p+i,value[i]);
		  }
        }
      }
    }
    else if(data[5]>=0.50&&data[5]<1.5)
     4a2:	c8 01       	movw	r24, r16
     4a4:	b7 01       	movw	r22, r14
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	40 e0       	ldi	r20, 0x00	; 0
     4ac:	5f e3       	ldi	r21, 0x3F	; 63
     4ae:	0e 94 42 09 	call	0x1284	; 0x1284 <__gesf2>
     4b2:	88 23       	and	r24, r24
     4b4:	1c f1       	brlt	.+70     	; 0x4fc <key_scan+0x12a>
     4b6:	c8 01       	movw	r24, r16
     4b8:	b7 01       	movw	r22, r14
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	40 ec       	ldi	r20, 0xC0	; 192
     4c0:	5f e3       	ldi	r21, 0x3F	; 63
     4c2:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     4c6:	88 23       	and	r24, r24
     4c8:	cc f4       	brge	.+50     	; 0x4fc <key_scan+0x12a>
     4ca:	80 e2       	ldi	r24, 0x20	; 32
     4cc:	9e e4       	ldi	r25, 0x4E	; 78
     4ce:	01 97       	sbiw	r24, 0x01	; 1
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <key_scan+0xfc>
    {
       _delay_ms(5);//延时消抖
      if(data[5]>=0.50&&data[5]<1.5)
      {
	    buzzer();
     4d2:	0e 94 da 01 	call	0x3b4	; 0x3b4 <buzzer>
        if(key_1>=1&&key_1<=5)
     4d6:	90 91 2a 02 	lds	r25, 0x022A
     4da:	89 2f       	mov	r24, r25
     4dc:	81 50       	subi	r24, 0x01	; 1
     4de:	85 30       	cpi	r24, 0x05	; 5
     4e0:	38 f4       	brcc	.+14     	; 0x4f0 <key_scan+0x11e>
        {
          value[key_1-1]++;//传感器的分辨轨迹的界限值加加（调整）
     4e2:	e9 2f       	mov	r30, r25
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	e4 5d       	subi	r30, 0xD4	; 212
     4e8:	fd 4f       	sbci	r31, 0xFD	; 253
     4ea:	80 81       	ld	r24, Z
     4ec:	8f 5f       	subi	r24, 0xFF	; 255
     4ee:	2c c0       	rjmp	.+88     	; 0x548 <key_scan+0x176>
          value_adjust(key_1);//跟实际值对比
        }
		else
		key_2++;
     4f0:	80 91 2b 02 	lds	r24, 0x022B
     4f4:	8f 5f       	subi	r24, 0xFF	; 255
     4f6:	80 93 2b 02 	sts	0x022B, r24
     4fa:	2a c0       	rjmp	.+84     	; 0x550 <key_scan+0x17e>
      }
    }
    else if(data[5]>=1.5&&data[5]<2.5)
     4fc:	c8 01       	movw	r24, r16
     4fe:	b7 01       	movw	r22, r14
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 ec       	ldi	r20, 0xC0	; 192
     506:	5f e3       	ldi	r21, 0x3F	; 63
     508:	0e 94 42 09 	call	0x1284	; 0x1284 <__gesf2>
     50c:	88 23       	and	r24, r24
     50e:	04 f1       	brlt	.+64     	; 0x550 <key_scan+0x17e>
     510:	c8 01       	movw	r24, r16
     512:	b7 01       	movw	r22, r14
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	40 e2       	ldi	r20, 0x20	; 32
     51a:	50 e4       	ldi	r21, 0x40	; 64
     51c:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     520:	88 23       	and	r24, r24
     522:	b4 f4       	brge	.+44     	; 0x550 <key_scan+0x17e>
     524:	80 e2       	ldi	r24, 0x20	; 32
     526:	9e e4       	ldi	r25, 0x4E	; 78
     528:	01 97       	sbiw	r24, 0x01	; 1
     52a:	f1 f7       	brne	.-4      	; 0x528 <key_scan+0x156>
    {
       _delay_ms(5);//延时消抖
      if(data[5]>=1.5&&data[5]<2.5)
      {
	    buzzer();
     52c:	0e 94 da 01 	call	0x3b4	; 0x3b4 <buzzer>
        if(key_1>=1&&key_1<=5)
     530:	90 91 2a 02 	lds	r25, 0x022A
     534:	89 2f       	mov	r24, r25
     536:	81 50       	subi	r24, 0x01	; 1
     538:	85 30       	cpi	r24, 0x05	; 5
     53a:	50 f4       	brcc	.+20     	; 0x550 <key_scan+0x17e>
        {
          value[key_1-1]--;//传感器的分辨轨迹的界限值减减（调整）
     53c:	e9 2f       	mov	r30, r25
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	e4 5d       	subi	r30, 0xD4	; 212
     542:	fd 4f       	sbci	r31, 0xFD	; 253
     544:	80 81       	ld	r24, Z
     546:	81 50       	subi	r24, 0x01	; 1
     548:	80 83       	st	Z, r24
          value_adjust(key_1);//跟实际值对比
     54a:	89 2f       	mov	r24, r25
     54c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <value_adjust>
        }
      }
    }
  }
}
     550:	1f 91       	pop	r17
     552:	0f 91       	pop	r16
     554:	ff 90       	pop	r15
     556:	ef 90       	pop	r14
     558:	08 95       	ret

0000055a <huntline_deal>:
   	}
    adc_init(channel);
}
//寻线函数
void huntline_deal(void)
{
     55a:	4f 92       	push	r4
     55c:	5f 92       	push	r5
     55e:	6f 92       	push	r6
     560:	7f 92       	push	r7
     562:	8f 92       	push	r8
     564:	9f 92       	push	r9
     566:	af 92       	push	r10
     568:	bf 92       	push	r11
     56a:	cf 92       	push	r12
     56c:	df 92       	push	r13
     56e:	ef 92       	push	r14
     570:	ff 92       	push	r15
     572:	0f 93       	push	r16
     574:	1f 93       	push	r17
     576:	df 93       	push	r29
     578:	cf 93       	push	r28
     57a:	00 d0       	rcall	.+0      	; 0x57c <huntline_deal+0x22>
     57c:	00 d0       	rcall	.+0      	; 0x57e <huntline_deal+0x24>
     57e:	cd b7       	in	r28, 0x3d	; 61
     580:	de b7       	in	r29, 0x3e	; 62
    if(key_2==1)
     582:	80 91 2b 02 	lds	r24, 0x022B
     586:	81 30       	cpi	r24, 0x01	; 1
     588:	09 f0       	breq	.+2      	; 0x58c <huntline_deal+0x32>
     58a:	78 c3       	rjmp	.+1776   	; 0xc7c <__stack+0x37d>
	{
		int i;
		*p=0x0a;
     58c:	e0 91 32 02 	lds	r30, 0x0232
     590:	f0 91 33 02 	lds	r31, 0x0233
     594:	8a e0       	ldi	r24, 0x0A	; 10
     596:	80 83       	st	Z, r24
	    //读取存在EEPROM中的电压值
	    for(i=0;i<5;i++)
		{
			eeprom_busy_wait();
		    value[i]=eeprom_read_byte(p+i);
     598:	00 91 32 02 	lds	r16, 0x0232
     59c:	10 91 33 02 	lds	r17, 0x0233
     5a0:	ee 24       	eor	r14, r14
     5a2:	ff 24       	eor	r15, r15
		int i;
		*p=0x0a;
	    //读取存在EEPROM中的电压值
	    for(i=0;i<5;i++)
		{
			eeprom_busy_wait();
     5a4:	f9 99       	sbic	0x1f, 1	; 31
     5a6:	fe cf       	rjmp	.-4      	; 0x5a4 <huntline_deal+0x4a>
		    value[i]=eeprom_read_byte(p+i);
     5a8:	c8 01       	movw	r24, r16
     5aa:	8e 0d       	add	r24, r14
     5ac:	9f 1d       	adc	r25, r15
     5ae:	0e 94 a5 0c 	call	0x194a	; 0x194a <__eerd_byte_m328p>
     5b2:	f7 01       	movw	r30, r14
     5b4:	e3 5d       	subi	r30, 0xD3	; 211
     5b6:	fd 4f       	sbci	r31, 0xFD	; 253
     5b8:	80 83       	st	Z, r24
    if(key_2==1)
	{
		int i;
		*p=0x0a;
	    //读取存在EEPROM中的电压值
	    for(i=0;i<5;i++)
     5ba:	08 94       	sec
     5bc:	e1 1c       	adc	r14, r1
     5be:	f1 1c       	adc	r15, r1
     5c0:	85 e0       	ldi	r24, 0x05	; 5
     5c2:	e8 16       	cp	r14, r24
     5c4:	f1 04       	cpc	r15, r1
     5c6:	71 f7       	brne	.-36     	; 0x5a4 <huntline_deal+0x4a>
		{
			eeprom_busy_wait();
		    value[i]=eeprom_read_byte(p+i);
		}
	    if(data[0]>(value[0]-1)&&data[1]>(value[1]-1)&&data[2]<(value[2]-1)&&data[3]>(value[3]-1)&&data[7]>(value[4]-1))//测一下实际值
     5c8:	80 91 00 01 	lds	r24, 0x0100
     5cc:	90 91 01 01 	lds	r25, 0x0101
     5d0:	a0 91 02 01 	lds	r26, 0x0102
     5d4:	b0 91 03 01 	lds	r27, 0x0103
     5d8:	89 83       	std	Y+1, r24	; 0x01
     5da:	9a 83       	std	Y+2, r25	; 0x02
     5dc:	ab 83       	std	Y+3, r26	; 0x03
     5de:	bc 83       	std	Y+4, r27	; 0x04
     5e0:	60 91 2d 02 	lds	r22, 0x022D
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	61 50       	subi	r22, 0x01	; 1
     5e8:	70 40       	sbci	r23, 0x00	; 0
     5ea:	88 27       	eor	r24, r24
     5ec:	77 fd       	sbrc	r23, 7
     5ee:	80 95       	com	r24
     5f0:	98 2f       	mov	r25, r24
     5f2:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     5f6:	2b 01       	movw	r4, r22
     5f8:	3c 01       	movw	r6, r24
     5fa:	69 81       	ldd	r22, Y+1	; 0x01
     5fc:	7a 81       	ldd	r23, Y+2	; 0x02
     5fe:	8b 81       	ldd	r24, Y+3	; 0x03
     600:	9c 81       	ldd	r25, Y+4	; 0x04
     602:	a3 01       	movw	r20, r6
     604:	92 01       	movw	r18, r4
     606:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     60a:	18 16       	cp	r1, r24
     60c:	0c f0       	brlt	.+2      	; 0x610 <huntline_deal+0xb6>
     60e:	62 c2       	rjmp	.+1220   	; 0xad4 <__stack+0x1d5>
     610:	80 90 04 01 	lds	r8, 0x0104
     614:	90 90 05 01 	lds	r9, 0x0105
     618:	a0 90 06 01 	lds	r10, 0x0106
     61c:	b0 90 07 01 	lds	r11, 0x0107
     620:	60 91 2e 02 	lds	r22, 0x022E
     624:	70 e0       	ldi	r23, 0x00	; 0
     626:	61 50       	subi	r22, 0x01	; 1
     628:	70 40       	sbci	r23, 0x00	; 0
     62a:	88 27       	eor	r24, r24
     62c:	77 fd       	sbrc	r23, 7
     62e:	80 95       	com	r24
     630:	98 2f       	mov	r25, r24
     632:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     636:	6b 01       	movw	r12, r22
     638:	7c 01       	movw	r14, r24
     63a:	10 e0       	ldi	r17, 0x00	; 0
     63c:	c5 01       	movw	r24, r10
     63e:	b4 01       	movw	r22, r8
     640:	a7 01       	movw	r20, r14
     642:	96 01       	movw	r18, r12
     644:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     648:	18 16       	cp	r1, r24
     64a:	0c f0       	brlt	.+2      	; 0x64e <huntline_deal+0xf4>
     64c:	4f c0       	rjmp	.+158    	; 0x6ec <huntline_deal+0x192>
     64e:	11 e0       	ldi	r17, 0x01	; 1
     650:	60 91 2f 02 	lds	r22, 0x022F
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	61 50       	subi	r22, 0x01	; 1
     658:	70 40       	sbci	r23, 0x00	; 0
     65a:	88 27       	eor	r24, r24
     65c:	77 fd       	sbrc	r23, 7
     65e:	80 95       	com	r24
     660:	98 2f       	mov	r25, r24
     662:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     666:	9b 01       	movw	r18, r22
     668:	ac 01       	movw	r20, r24
     66a:	60 91 08 01 	lds	r22, 0x0108
     66e:	70 91 09 01 	lds	r23, 0x0109
     672:	80 91 0a 01 	lds	r24, 0x010A
     676:	90 91 0b 01 	lds	r25, 0x010B
     67a:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     67e:	88 23       	and	r24, r24
     680:	ac f5       	brge	.+106    	; 0x6ec <huntline_deal+0x192>
     682:	60 91 30 02 	lds	r22, 0x0230
     686:	70 e0       	ldi	r23, 0x00	; 0
     688:	61 50       	subi	r22, 0x01	; 1
     68a:	70 40       	sbci	r23, 0x00	; 0
     68c:	88 27       	eor	r24, r24
     68e:	77 fd       	sbrc	r23, 7
     690:	80 95       	com	r24
     692:	98 2f       	mov	r25, r24
     694:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     698:	9b 01       	movw	r18, r22
     69a:	ac 01       	movw	r20, r24
     69c:	60 91 0c 01 	lds	r22, 0x010C
     6a0:	70 91 0d 01 	lds	r23, 0x010D
     6a4:	80 91 0e 01 	lds	r24, 0x010E
     6a8:	90 91 0f 01 	lds	r25, 0x010F
     6ac:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     6b0:	18 16       	cp	r1, r24
     6b2:	fc f4       	brge	.+62     	; 0x6f2 <huntline_deal+0x198>
     6b4:	60 91 31 02 	lds	r22, 0x0231
     6b8:	70 e0       	ldi	r23, 0x00	; 0
     6ba:	61 50       	subi	r22, 0x01	; 1
     6bc:	70 40       	sbci	r23, 0x00	; 0
     6be:	88 27       	eor	r24, r24
     6c0:	77 fd       	sbrc	r23, 7
     6c2:	80 95       	com	r24
     6c4:	98 2f       	mov	r25, r24
     6c6:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     6ca:	9b 01       	movw	r18, r22
     6cc:	ac 01       	movw	r20, r24
     6ce:	60 91 1c 01 	lds	r22, 0x011C
     6d2:	70 91 1d 01 	lds	r23, 0x011D
     6d6:	80 91 1e 01 	lds	r24, 0x011E
     6da:	90 91 1f 01 	lds	r25, 0x011F
     6de:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     6e2:	18 16       	cp	r1, r24
     6e4:	34 f4       	brge	.+12     	; 0x6f2 <huntline_deal+0x198>
		{
			Motor_Control(FORW,100,FORW,100);//前进
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	f4 c0       	rjmp	.+488    	; 0x8d4 <huntline_deal+0x37a>
		} 
		else if(data[0]>(value[0]-1)&&data[1]>(value[1]-1)&&data[2]<(value[2]-1)&&data[3]<(value[3]-1)&&data[7]>(value[4]-1))
     6ec:	11 23       	and	r17, r17
     6ee:	09 f4       	brne	.+2      	; 0x6f2 <huntline_deal+0x198>
     6f0:	52 c0       	rjmp	.+164    	; 0x796 <huntline_deal+0x23c>
     6f2:	60 91 2f 02 	lds	r22, 0x022F
     6f6:	70 e0       	ldi	r23, 0x00	; 0
     6f8:	61 50       	subi	r22, 0x01	; 1
     6fa:	70 40       	sbci	r23, 0x00	; 0
     6fc:	88 27       	eor	r24, r24
     6fe:	77 fd       	sbrc	r23, 7
     700:	80 95       	com	r24
     702:	98 2f       	mov	r25, r24
     704:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     708:	9b 01       	movw	r18, r22
     70a:	ac 01       	movw	r20, r24
     70c:	60 91 08 01 	lds	r22, 0x0108
     710:	70 91 09 01 	lds	r23, 0x0109
     714:	80 91 0a 01 	lds	r24, 0x010A
     718:	90 91 0b 01 	lds	r25, 0x010B
     71c:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     720:	88 23       	and	r24, r24
     722:	cc f5       	brge	.+114    	; 0x796 <huntline_deal+0x23c>
     724:	60 91 30 02 	lds	r22, 0x0230
     728:	70 e0       	ldi	r23, 0x00	; 0
     72a:	61 50       	subi	r22, 0x01	; 1
     72c:	70 40       	sbci	r23, 0x00	; 0
     72e:	88 27       	eor	r24, r24
     730:	77 fd       	sbrc	r23, 7
     732:	80 95       	com	r24
     734:	98 2f       	mov	r25, r24
     736:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     73a:	9b 01       	movw	r18, r22
     73c:	ac 01       	movw	r20, r24
     73e:	60 91 0c 01 	lds	r22, 0x010C
     742:	70 91 0d 01 	lds	r23, 0x010D
     746:	80 91 0e 01 	lds	r24, 0x010E
     74a:	90 91 0f 01 	lds	r25, 0x010F
     74e:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     752:	88 23       	and	r24, r24
     754:	04 f5       	brge	.+64     	; 0x796 <huntline_deal+0x23c>
     756:	60 91 31 02 	lds	r22, 0x0231
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	61 50       	subi	r22, 0x01	; 1
     75e:	70 40       	sbci	r23, 0x00	; 0
     760:	88 27       	eor	r24, r24
     762:	77 fd       	sbrc	r23, 7
     764:	80 95       	com	r24
     766:	98 2f       	mov	r25, r24
     768:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     76c:	9b 01       	movw	r18, r22
     76e:	ac 01       	movw	r20, r24
     770:	60 91 1c 01 	lds	r22, 0x011C
     774:	70 91 1d 01 	lds	r23, 0x011D
     778:	80 91 1e 01 	lds	r24, 0x011E
     77c:	90 91 1f 01 	lds	r25, 0x011F
     780:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     784:	18 16       	cp	r1, r24
     786:	3c f4       	brge	.+14     	; 0x796 <huntline_deal+0x23c>
		{
			Motor_Control(BACK,0,FORW,100);//右转
     788:	80 e0       	ldi	r24, 0x00	; 0
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	41 e0       	ldi	r20, 0x01	; 1
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	6f c2       	rjmp	.+1246   	; 0xc74 <__stack+0x375>
		}
		else if(data[0]>(value[0]-1)&&data[1]>(value[1]-1)&&data[2]>(value[2]-1)&&data[3]<(value[3]-1)&&data[7]>(value[4]-1))
     796:	11 23       	and	r17, r17
     798:	09 f4       	brne	.+2      	; 0x79c <huntline_deal+0x242>
     79a:	4c c0       	rjmp	.+152    	; 0x834 <huntline_deal+0x2da>
     79c:	60 91 2f 02 	lds	r22, 0x022F
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	61 50       	subi	r22, 0x01	; 1
     7a4:	70 40       	sbci	r23, 0x00	; 0
     7a6:	88 27       	eor	r24, r24
     7a8:	77 fd       	sbrc	r23, 7
     7aa:	80 95       	com	r24
     7ac:	98 2f       	mov	r25, r24
     7ae:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     7b2:	9b 01       	movw	r18, r22
     7b4:	ac 01       	movw	r20, r24
     7b6:	60 91 08 01 	lds	r22, 0x0108
     7ba:	70 91 09 01 	lds	r23, 0x0109
     7be:	80 91 0a 01 	lds	r24, 0x010A
     7c2:	90 91 0b 01 	lds	r25, 0x010B
     7c6:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     7ca:	18 16       	cp	r1, r24
     7cc:	9c f5       	brge	.+102    	; 0x834 <huntline_deal+0x2da>
     7ce:	60 91 30 02 	lds	r22, 0x0230
     7d2:	70 e0       	ldi	r23, 0x00	; 0
     7d4:	61 50       	subi	r22, 0x01	; 1
     7d6:	70 40       	sbci	r23, 0x00	; 0
     7d8:	88 27       	eor	r24, r24
     7da:	77 fd       	sbrc	r23, 7
     7dc:	80 95       	com	r24
     7de:	98 2f       	mov	r25, r24
     7e0:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     7e4:	9b 01       	movw	r18, r22
     7e6:	ac 01       	movw	r20, r24
     7e8:	60 91 0c 01 	lds	r22, 0x010C
     7ec:	70 91 0d 01 	lds	r23, 0x010D
     7f0:	80 91 0e 01 	lds	r24, 0x010E
     7f4:	90 91 0f 01 	lds	r25, 0x010F
     7f8:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     7fc:	88 23       	and	r24, r24
     7fe:	d4 f4       	brge	.+52     	; 0x834 <huntline_deal+0x2da>
     800:	60 91 31 02 	lds	r22, 0x0231
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	61 50       	subi	r22, 0x01	; 1
     808:	70 40       	sbci	r23, 0x00	; 0
     80a:	88 27       	eor	r24, r24
     80c:	77 fd       	sbrc	r23, 7
     80e:	80 95       	com	r24
     810:	98 2f       	mov	r25, r24
     812:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     816:	9b 01       	movw	r18, r22
     818:	ac 01       	movw	r20, r24
     81a:	60 91 1c 01 	lds	r22, 0x011C
     81e:	70 91 1d 01 	lds	r23, 0x011D
     822:	80 91 1e 01 	lds	r24, 0x011E
     826:	90 91 1f 01 	lds	r25, 0x011F
     82a:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     82e:	18 16       	cp	r1, r24
     830:	0c f4       	brge	.+2      	; 0x834 <huntline_deal+0x2da>
     832:	aa cf       	rjmp	.-172    	; 0x788 <huntline_deal+0x22e>
		{
			Motor_Control(BACK,0,FORW,100);//右转
		}
		else if(data[0]>(value[0]-1)&&data[1]>(value[1]-1)&&data[2]>(value[2]-1)&&data[3]<(value[3]-1)&&data[7]<(value[4]-1))
     834:	11 23       	and	r17, r17
     836:	09 f4       	brne	.+2      	; 0x83a <huntline_deal+0x2e0>
     838:	50 c0       	rjmp	.+160    	; 0x8da <huntline_deal+0x380>
     83a:	60 91 2f 02 	lds	r22, 0x022F
     83e:	70 e0       	ldi	r23, 0x00	; 0
     840:	61 50       	subi	r22, 0x01	; 1
     842:	70 40       	sbci	r23, 0x00	; 0
     844:	88 27       	eor	r24, r24
     846:	77 fd       	sbrc	r23, 7
     848:	80 95       	com	r24
     84a:	98 2f       	mov	r25, r24
     84c:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     850:	9b 01       	movw	r18, r22
     852:	ac 01       	movw	r20, r24
     854:	60 91 08 01 	lds	r22, 0x0108
     858:	70 91 09 01 	lds	r23, 0x0109
     85c:	80 91 0a 01 	lds	r24, 0x010A
     860:	90 91 0b 01 	lds	r25, 0x010B
     864:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     868:	18 16       	cp	r1, r24
     86a:	bc f5       	brge	.+110    	; 0x8da <huntline_deal+0x380>
     86c:	60 91 30 02 	lds	r22, 0x0230
     870:	70 e0       	ldi	r23, 0x00	; 0
     872:	61 50       	subi	r22, 0x01	; 1
     874:	70 40       	sbci	r23, 0x00	; 0
     876:	88 27       	eor	r24, r24
     878:	77 fd       	sbrc	r23, 7
     87a:	80 95       	com	r24
     87c:	98 2f       	mov	r25, r24
     87e:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     882:	9b 01       	movw	r18, r22
     884:	ac 01       	movw	r20, r24
     886:	60 91 0c 01 	lds	r22, 0x010C
     88a:	70 91 0d 01 	lds	r23, 0x010D
     88e:	80 91 0e 01 	lds	r24, 0x010E
     892:	90 91 0f 01 	lds	r25, 0x010F
     896:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     89a:	88 23       	and	r24, r24
     89c:	f4 f4       	brge	.+60     	; 0x8da <huntline_deal+0x380>
     89e:	60 91 31 02 	lds	r22, 0x0231
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	61 50       	subi	r22, 0x01	; 1
     8a6:	70 40       	sbci	r23, 0x00	; 0
     8a8:	88 27       	eor	r24, r24
     8aa:	77 fd       	sbrc	r23, 7
     8ac:	80 95       	com	r24
     8ae:	98 2f       	mov	r25, r24
     8b0:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     8b4:	9b 01       	movw	r18, r22
     8b6:	ac 01       	movw	r20, r24
     8b8:	60 91 1c 01 	lds	r22, 0x011C
     8bc:	70 91 1d 01 	lds	r23, 0x011D
     8c0:	80 91 1e 01 	lds	r24, 0x011E
     8c4:	90 91 1f 01 	lds	r25, 0x011F
     8c8:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     8cc:	88 23       	and	r24, r24
     8ce:	2c f4       	brge	.+10     	; 0x8da <huntline_deal+0x380>
		{
			Motor_Control(BACK,100,FORW,100);//右转
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	64 e6       	ldi	r22, 0x64	; 100
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	5b cf       	rjmp	.-330    	; 0x790 <huntline_deal+0x236>
		}
		else if(data[0]>(value[0]-1)&&data[1]>(value[1]-1)&&data[2]>(value[2]-1)&&data[3]>(value[3]-1)&&data[7]<(value[4]-1))
     8da:	11 23       	and	r17, r17
     8dc:	09 f4       	brne	.+2      	; 0x8e0 <huntline_deal+0x386>
     8de:	4c c0       	rjmp	.+152    	; 0x978 <__stack+0x79>
     8e0:	60 91 2f 02 	lds	r22, 0x022F
     8e4:	70 e0       	ldi	r23, 0x00	; 0
     8e6:	61 50       	subi	r22, 0x01	; 1
     8e8:	70 40       	sbci	r23, 0x00	; 0
     8ea:	88 27       	eor	r24, r24
     8ec:	77 fd       	sbrc	r23, 7
     8ee:	80 95       	com	r24
     8f0:	98 2f       	mov	r25, r24
     8f2:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     8f6:	9b 01       	movw	r18, r22
     8f8:	ac 01       	movw	r20, r24
     8fa:	60 91 08 01 	lds	r22, 0x0108
     8fe:	70 91 09 01 	lds	r23, 0x0109
     902:	80 91 0a 01 	lds	r24, 0x010A
     906:	90 91 0b 01 	lds	r25, 0x010B
     90a:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     90e:	18 16       	cp	r1, r24
     910:	9c f5       	brge	.+102    	; 0x978 <__stack+0x79>
     912:	60 91 30 02 	lds	r22, 0x0230
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	61 50       	subi	r22, 0x01	; 1
     91a:	70 40       	sbci	r23, 0x00	; 0
     91c:	88 27       	eor	r24, r24
     91e:	77 fd       	sbrc	r23, 7
     920:	80 95       	com	r24
     922:	98 2f       	mov	r25, r24
     924:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     928:	9b 01       	movw	r18, r22
     92a:	ac 01       	movw	r20, r24
     92c:	60 91 0c 01 	lds	r22, 0x010C
     930:	70 91 0d 01 	lds	r23, 0x010D
     934:	80 91 0e 01 	lds	r24, 0x010E
     938:	90 91 0f 01 	lds	r25, 0x010F
     93c:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     940:	18 16       	cp	r1, r24
     942:	d4 f4       	brge	.+52     	; 0x978 <__stack+0x79>
     944:	60 91 31 02 	lds	r22, 0x0231
     948:	70 e0       	ldi	r23, 0x00	; 0
     94a:	61 50       	subi	r22, 0x01	; 1
     94c:	70 40       	sbci	r23, 0x00	; 0
     94e:	88 27       	eor	r24, r24
     950:	77 fd       	sbrc	r23, 7
     952:	80 95       	com	r24
     954:	98 2f       	mov	r25, r24
     956:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     95a:	9b 01       	movw	r18, r22
     95c:	ac 01       	movw	r20, r24
     95e:	60 91 1c 01 	lds	r22, 0x011C
     962:	70 91 1d 01 	lds	r23, 0x011D
     966:	80 91 1e 01 	lds	r24, 0x011E
     96a:	90 91 1f 01 	lds	r25, 0x011F
     96e:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     972:	88 23       	and	r24, r24
     974:	0c f4       	brge	.+2      	; 0x978 <__stack+0x79>
     976:	ac cf       	rjmp	.-168    	; 0x8d0 <huntline_deal+0x376>
		{
			Motor_Control(BACK,100,FORW,100);//右转
		}
		else if(data[0]>(value[0]-1)&&data[1]<(value[1]-1)&&data[2]<(value[2]-1)&&data[3]>(value[3]-1)&&data[7]>(value[4]-1))
     978:	10 e0       	ldi	r17, 0x00	; 0
     97a:	c5 01       	movw	r24, r10
     97c:	b4 01       	movw	r22, r8
     97e:	a7 01       	movw	r20, r14
     980:	96 01       	movw	r18, r12
     982:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     986:	88 23       	and	r24, r24
     988:	0c f0       	brlt	.+2      	; 0x98c <__stack+0x8d>
     98a:	4d c0       	rjmp	.+154    	; 0xa26 <__stack+0x127>
     98c:	11 e0       	ldi	r17, 0x01	; 1
     98e:	60 91 2f 02 	lds	r22, 0x022F
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	61 50       	subi	r22, 0x01	; 1
     996:	70 40       	sbci	r23, 0x00	; 0
     998:	88 27       	eor	r24, r24
     99a:	77 fd       	sbrc	r23, 7
     99c:	80 95       	com	r24
     99e:	98 2f       	mov	r25, r24
     9a0:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     9a4:	9b 01       	movw	r18, r22
     9a6:	ac 01       	movw	r20, r24
     9a8:	60 91 08 01 	lds	r22, 0x0108
     9ac:	70 91 09 01 	lds	r23, 0x0109
     9b0:	80 91 0a 01 	lds	r24, 0x010A
     9b4:	90 91 0b 01 	lds	r25, 0x010B
     9b8:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     9bc:	88 23       	and	r24, r24
     9be:	9c f5       	brge	.+102    	; 0xa26 <__stack+0x127>
     9c0:	60 91 30 02 	lds	r22, 0x0230
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	61 50       	subi	r22, 0x01	; 1
     9c8:	70 40       	sbci	r23, 0x00	; 0
     9ca:	88 27       	eor	r24, r24
     9cc:	77 fd       	sbrc	r23, 7
     9ce:	80 95       	com	r24
     9d0:	98 2f       	mov	r25, r24
     9d2:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     9d6:	9b 01       	movw	r18, r22
     9d8:	ac 01       	movw	r20, r24
     9da:	60 91 0c 01 	lds	r22, 0x010C
     9de:	70 91 0d 01 	lds	r23, 0x010D
     9e2:	80 91 0e 01 	lds	r24, 0x010E
     9e6:	90 91 0f 01 	lds	r25, 0x010F
     9ea:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     9ee:	18 16       	cp	r1, r24
     9f0:	ec f4       	brge	.+58     	; 0xa2c <__stack+0x12d>
     9f2:	60 91 31 02 	lds	r22, 0x0231
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	61 50       	subi	r22, 0x01	; 1
     9fa:	70 40       	sbci	r23, 0x00	; 0
     9fc:	88 27       	eor	r24, r24
     9fe:	77 fd       	sbrc	r23, 7
     a00:	80 95       	com	r24
     a02:	98 2f       	mov	r25, r24
     a04:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     a08:	9b 01       	movw	r18, r22
     a0a:	ac 01       	movw	r20, r24
     a0c:	60 91 1c 01 	lds	r22, 0x011C
     a10:	70 91 1d 01 	lds	r23, 0x011D
     a14:	80 91 1e 01 	lds	r24, 0x011E
     a18:	90 91 1f 01 	lds	r25, 0x011F
     a1c:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     a20:	18 16       	cp	r1, r24
     a22:	24 f4       	brge	.+8      	; 0xa2c <__stack+0x12d>
     a24:	4e c0       	rjmp	.+156    	; 0xac2 <__stack+0x1c3>
		{
			Motor_Control(FORW,100,BACK,0);//左转
		}
		else if(data[0]>(value[0]-1)&&data[1]<(value[1]-1)&&data[2]>(value[2]-1)&&data[3]>(value[3]-1)&&data[7]>(value[4]-1))
     a26:	11 23       	and	r17, r17
     a28:	09 f4       	brne	.+2      	; 0xa2c <__stack+0x12d>
     a2a:	54 c0       	rjmp	.+168    	; 0xad4 <__stack+0x1d5>
     a2c:	60 91 2f 02 	lds	r22, 0x022F
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	61 50       	subi	r22, 0x01	; 1
     a34:	70 40       	sbci	r23, 0x00	; 0
     a36:	88 27       	eor	r24, r24
     a38:	77 fd       	sbrc	r23, 7
     a3a:	80 95       	com	r24
     a3c:	98 2f       	mov	r25, r24
     a3e:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     a42:	9b 01       	movw	r18, r22
     a44:	ac 01       	movw	r20, r24
     a46:	60 91 08 01 	lds	r22, 0x0108
     a4a:	70 91 09 01 	lds	r23, 0x0109
     a4e:	80 91 0a 01 	lds	r24, 0x010A
     a52:	90 91 0b 01 	lds	r25, 0x010B
     a56:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     a5a:	18 16       	cp	r1, r24
     a5c:	dc f5       	brge	.+118    	; 0xad4 <__stack+0x1d5>
     a5e:	60 91 30 02 	lds	r22, 0x0230
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	61 50       	subi	r22, 0x01	; 1
     a66:	70 40       	sbci	r23, 0x00	; 0
     a68:	88 27       	eor	r24, r24
     a6a:	77 fd       	sbrc	r23, 7
     a6c:	80 95       	com	r24
     a6e:	98 2f       	mov	r25, r24
     a70:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     a74:	9b 01       	movw	r18, r22
     a76:	ac 01       	movw	r20, r24
     a78:	60 91 0c 01 	lds	r22, 0x010C
     a7c:	70 91 0d 01 	lds	r23, 0x010D
     a80:	80 91 0e 01 	lds	r24, 0x010E
     a84:	90 91 0f 01 	lds	r25, 0x010F
     a88:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     a8c:	18 16       	cp	r1, r24
     a8e:	14 f5       	brge	.+68     	; 0xad4 <__stack+0x1d5>
     a90:	60 91 31 02 	lds	r22, 0x0231
     a94:	70 e0       	ldi	r23, 0x00	; 0
     a96:	61 50       	subi	r22, 0x01	; 1
     a98:	70 40       	sbci	r23, 0x00	; 0
     a9a:	88 27       	eor	r24, r24
     a9c:	77 fd       	sbrc	r23, 7
     a9e:	80 95       	com	r24
     aa0:	98 2f       	mov	r25, r24
     aa2:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     aa6:	9b 01       	movw	r18, r22
     aa8:	ac 01       	movw	r20, r24
     aaa:	60 91 1c 01 	lds	r22, 0x011C
     aae:	70 91 1d 01 	lds	r23, 0x011D
     ab2:	80 91 1e 01 	lds	r24, 0x011E
     ab6:	90 91 1f 01 	lds	r25, 0x011F
     aba:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     abe:	18 16       	cp	r1, r24
     ac0:	4c f4       	brge	.+18     	; 0xad4 <__stack+0x1d5>
		{
			Motor_Control(FORW,100,BACK,0);//左转
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	64 e6       	ldi	r22, 0x64	; 100
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	40 e0       	ldi	r20, 0x00	; 0
     acc:	50 e0       	ldi	r21, 0x00	; 0
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	d2 c0       	rjmp	.+420    	; 0xc78 <__stack+0x379>
		}
		else if(data[0]<(value[0]-1)&&data[1]<(value[1]-1)&&data[2]>(value[2]-1)&&data[3]>(value[3]-1)&&data[7]>(value[4]-1))
     ad4:	69 81       	ldd	r22, Y+1	; 0x01
     ad6:	7a 81       	ldd	r23, Y+2	; 0x02
     ad8:	8b 81       	ldd	r24, Y+3	; 0x03
     ada:	9c 81       	ldd	r25, Y+4	; 0x04
     adc:	a3 01       	movw	r20, r6
     ade:	92 01       	movw	r18, r4
     ae0:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     ae4:	88 23       	and	r24, r24
     ae6:	0c f0       	brlt	.+2      	; 0xaea <__stack+0x1eb>
     ae8:	c9 c0       	rjmp	.+402    	; 0xc7c <__stack+0x37d>
     aea:	a0 90 04 01 	lds	r10, 0x0104
     aee:	b0 90 05 01 	lds	r11, 0x0105
     af2:	c0 90 06 01 	lds	r12, 0x0106
     af6:	d0 90 07 01 	lds	r13, 0x0107
     afa:	60 91 2e 02 	lds	r22, 0x022E
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	61 50       	subi	r22, 0x01	; 1
     b02:	70 40       	sbci	r23, 0x00	; 0
     b04:	88 27       	eor	r24, r24
     b06:	77 fd       	sbrc	r23, 7
     b08:	80 95       	com	r24
     b0a:	98 2f       	mov	r25, r24
     b0c:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     b10:	7b 01       	movw	r14, r22
     b12:	8c 01       	movw	r16, r24
     b14:	c6 01       	movw	r24, r12
     b16:	b5 01       	movw	r22, r10
     b18:	a8 01       	movw	r20, r16
     b1a:	97 01       	movw	r18, r14
     b1c:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__ltsf2>
     b20:	88 23       	and	r24, r24
     b22:	0c f0       	brlt	.+2      	; 0xb26 <__stack+0x227>
     b24:	4c c0       	rjmp	.+152    	; 0xbbe <__stack+0x2bf>
     b26:	60 91 2f 02 	lds	r22, 0x022F
     b2a:	70 e0       	ldi	r23, 0x00	; 0
     b2c:	61 50       	subi	r22, 0x01	; 1
     b2e:	70 40       	sbci	r23, 0x00	; 0
     b30:	88 27       	eor	r24, r24
     b32:	77 fd       	sbrc	r23, 7
     b34:	80 95       	com	r24
     b36:	98 2f       	mov	r25, r24
     b38:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     b3c:	9b 01       	movw	r18, r22
     b3e:	ac 01       	movw	r20, r24
     b40:	60 91 08 01 	lds	r22, 0x0108
     b44:	70 91 09 01 	lds	r23, 0x0109
     b48:	80 91 0a 01 	lds	r24, 0x010A
     b4c:	90 91 0b 01 	lds	r25, 0x010B
     b50:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     b54:	18 16       	cp	r1, r24
     b56:	9c f5       	brge	.+102    	; 0xbbe <__stack+0x2bf>
     b58:	60 91 30 02 	lds	r22, 0x0230
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	61 50       	subi	r22, 0x01	; 1
     b60:	70 40       	sbci	r23, 0x00	; 0
     b62:	88 27       	eor	r24, r24
     b64:	77 fd       	sbrc	r23, 7
     b66:	80 95       	com	r24
     b68:	98 2f       	mov	r25, r24
     b6a:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     b6e:	9b 01       	movw	r18, r22
     b70:	ac 01       	movw	r20, r24
     b72:	60 91 0c 01 	lds	r22, 0x010C
     b76:	70 91 0d 01 	lds	r23, 0x010D
     b7a:	80 91 0e 01 	lds	r24, 0x010E
     b7e:	90 91 0f 01 	lds	r25, 0x010F
     b82:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     b86:	18 16       	cp	r1, r24
     b88:	d4 f4       	brge	.+52     	; 0xbbe <__stack+0x2bf>
     b8a:	60 91 31 02 	lds	r22, 0x0231
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	61 50       	subi	r22, 0x01	; 1
     b92:	70 40       	sbci	r23, 0x00	; 0
     b94:	88 27       	eor	r24, r24
     b96:	77 fd       	sbrc	r23, 7
     b98:	80 95       	com	r24
     b9a:	98 2f       	mov	r25, r24
     b9c:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     ba0:	9b 01       	movw	r18, r22
     ba2:	ac 01       	movw	r20, r24
     ba4:	60 91 1c 01 	lds	r22, 0x011C
     ba8:	70 91 1d 01 	lds	r23, 0x011D
     bac:	80 91 1e 01 	lds	r24, 0x011E
     bb0:	90 91 1f 01 	lds	r25, 0x011F
     bb4:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     bb8:	18 16       	cp	r1, r24
     bba:	0c f4       	brge	.+2      	; 0xbbe <__stack+0x2bf>
     bbc:	55 c0       	rjmp	.+170    	; 0xc68 <__stack+0x369>
		{
			Motor_Control(FORW,100,BACK,100);//左转
		}
		else if(data[0]<(value[0]-1)&&data[1]>(value[1]-1)&&data[2]>(value[2]-1)&&data[3]>(value[3]-1)&&data[7]>(value[4]-1))
     bbe:	c6 01       	movw	r24, r12
     bc0:	b5 01       	movw	r22, r10
     bc2:	a8 01       	movw	r20, r16
     bc4:	97 01       	movw	r18, r14
     bc6:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     bca:	18 16       	cp	r1, r24
     bcc:	0c f0       	brlt	.+2      	; 0xbd0 <__stack+0x2d1>
     bce:	56 c0       	rjmp	.+172    	; 0xc7c <__stack+0x37d>
     bd0:	60 91 2f 02 	lds	r22, 0x022F
     bd4:	70 e0       	ldi	r23, 0x00	; 0
     bd6:	61 50       	subi	r22, 0x01	; 1
     bd8:	70 40       	sbci	r23, 0x00	; 0
     bda:	88 27       	eor	r24, r24
     bdc:	77 fd       	sbrc	r23, 7
     bde:	80 95       	com	r24
     be0:	98 2f       	mov	r25, r24
     be2:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     be6:	9b 01       	movw	r18, r22
     be8:	ac 01       	movw	r20, r24
     bea:	60 91 08 01 	lds	r22, 0x0108
     bee:	70 91 09 01 	lds	r23, 0x0109
     bf2:	80 91 0a 01 	lds	r24, 0x010A
     bf6:	90 91 0b 01 	lds	r25, 0x010B
     bfa:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     bfe:	18 16       	cp	r1, r24
     c00:	0c f0       	brlt	.+2      	; 0xc04 <__stack+0x305>
     c02:	3c c0       	rjmp	.+120    	; 0xc7c <__stack+0x37d>
     c04:	60 91 30 02 	lds	r22, 0x0230
     c08:	70 e0       	ldi	r23, 0x00	; 0
     c0a:	61 50       	subi	r22, 0x01	; 1
     c0c:	70 40       	sbci	r23, 0x00	; 0
     c0e:	88 27       	eor	r24, r24
     c10:	77 fd       	sbrc	r23, 7
     c12:	80 95       	com	r24
     c14:	98 2f       	mov	r25, r24
     c16:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     c1a:	9b 01       	movw	r18, r22
     c1c:	ac 01       	movw	r20, r24
     c1e:	60 91 0c 01 	lds	r22, 0x010C
     c22:	70 91 0d 01 	lds	r23, 0x010D
     c26:	80 91 0e 01 	lds	r24, 0x010E
     c2a:	90 91 0f 01 	lds	r25, 0x010F
     c2e:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     c32:	18 16       	cp	r1, r24
     c34:	1c f5       	brge	.+70     	; 0xc7c <__stack+0x37d>
     c36:	60 91 31 02 	lds	r22, 0x0231
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 50       	subi	r22, 0x01	; 1
     c3e:	70 40       	sbci	r23, 0x00	; 0
     c40:	88 27       	eor	r24, r24
     c42:	77 fd       	sbrc	r23, 7
     c44:	80 95       	com	r24
     c46:	98 2f       	mov	r25, r24
     c48:	0e 94 a2 09 	call	0x1344	; 0x1344 <__floatsisf>
     c4c:	9b 01       	movw	r18, r22
     c4e:	ac 01       	movw	r20, r24
     c50:	60 91 1c 01 	lds	r22, 0x011C
     c54:	70 91 1d 01 	lds	r23, 0x011D
     c58:	80 91 1e 01 	lds	r24, 0x011E
     c5c:	90 91 1f 01 	lds	r25, 0x011F
     c60:	0e 94 12 09 	call	0x1224	; 0x1224 <__gtsf2>
     c64:	18 16       	cp	r1, r24
     c66:	54 f4       	brge	.+20     	; 0xc7c <__stack+0x37d>
		{
			Motor_Control(FORW,100,BACK,100);//左转
     c68:	81 e0       	ldi	r24, 0x01	; 1
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	64 e6       	ldi	r22, 0x64	; 100
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	40 e0       	ldi	r20, 0x00	; 0
     c72:	50 e0       	ldi	r21, 0x00	; 0
     c74:	24 e6       	ldi	r18, 0x64	; 100
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	0e 94 5b 00 	call	0xb6	; 0xb6 <Motor_Control>
		}
	}
}
     c7c:	0f 90       	pop	r0
     c7e:	0f 90       	pop	r0
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	cf 91       	pop	r28
     c86:	df 91       	pop	r29
     c88:	1f 91       	pop	r17
     c8a:	0f 91       	pop	r16
     c8c:	ff 90       	pop	r15
     c8e:	ef 90       	pop	r14
     c90:	df 90       	pop	r13
     c92:	cf 90       	pop	r12
     c94:	bf 90       	pop	r11
     c96:	af 90       	pop	r10
     c98:	9f 90       	pop	r9
     c9a:	8f 90       	pop	r8
     c9c:	7f 90       	pop	r7
     c9e:	6f 90       	pop	r6
     ca0:	5f 90       	pop	r5
     ca2:	4f 90       	pop	r4
     ca4:	08 95       	ret

00000ca6 <main>:
}

//主函数
int main(void)
{
    DDRD = 0XF2;//引脚配置
     ca6:	82 ef       	ldi	r24, 0xF2	; 242
     ca8:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0XFE;
     caa:	8e ef       	ldi	r24, 0xFE	; 254
     cac:	84 b9       	out	0x04, r24	; 4
	PORTD |=((1<<0)|(1<<2)|(1<<3));//设置输入引脚的上拉电阻有效
     cae:	8b b1       	in	r24, 0x0b	; 11
     cb0:	8d 60       	ori	r24, 0x0D	; 13
     cb2:	8b b9       	out	0x0b, r24	; 11
unsigned char *p;

//pwm初始化子函数
void pwm_init(void)
{ 
	TCCR0A = 0XA3;      
     cb4:	83 ea       	ldi	r24, 0xA3	; 163
     cb6:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0X03;//时钟源设置为clk/64
     cb8:	83 e0       	ldi	r24, 0x03	; 3
     cba:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 0X00; //初值设置为0
     cbc:	16 bc       	out	0x26, r1	; 38
	TIMSK0 = 0X00;//禁止中断    
     cbe:	10 92 6e 00 	sts	0x006E, r1
{
    DDRD = 0XF2;//引脚配置
	DDRB = 0XFE;
	PORTD |=((1<<0)|(1<<2)|(1<<3));//设置输入引脚的上拉电阻有效
	pwm_init();//PWM脉冲初始化
	adc_init(channel);//ad初始化
     cc2:	80 91 20 01 	lds	r24, 0x0120
}
//ad转换初始化函数
void adc_init(int channel)
{
    //设置ad转换寄存器
	ADMUX =channel;
     cc6:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = 0Xcb; 
     cca:	8b ec       	ldi	r24, 0xCB	; 203
     ccc:	80 93 7a 00 	sts	0x007A, r24
    DDRD = 0XF2;//引脚配置
	DDRB = 0XFE;
	PORTD |=((1<<0)|(1<<2)|(1<<3));//设置输入引脚的上拉电阻有效
	pwm_init();//PWM脉冲初始化
	adc_init(channel);//ad初始化
	sei();
     cd0:	78 94       	sei
	while(1)
	{
	   key_scan();//按键扫描
     cd2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <key_scan>
	   huntline_deal();//寻线
     cd6:	0e 94 ad 02 	call	0x55a	; 0x55a <huntline_deal>
     cda:	fb cf       	rjmp	.-10     	; 0xcd2 <main+0x2c>

00000cdc <_fpadd_parts>:
     cdc:	a0 e0       	ldi	r26, 0x00	; 0
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	e4 e7       	ldi	r30, 0x74	; 116
     ce2:	f6 e0       	ldi	r31, 0x06	; 6
     ce4:	0c 94 6e 0c 	jmp	0x18dc	; 0x18dc <__prologue_saves__>
     ce8:	dc 01       	movw	r26, r24
     cea:	2b 01       	movw	r4, r22
     cec:	fa 01       	movw	r30, r20
     cee:	9c 91       	ld	r25, X
     cf0:	92 30       	cpi	r25, 0x02	; 2
     cf2:	08 f4       	brcc	.+2      	; 0xcf6 <_fpadd_parts+0x1a>
     cf4:	39 c1       	rjmp	.+626    	; 0xf68 <_fpadd_parts+0x28c>
     cf6:	eb 01       	movw	r28, r22
     cf8:	88 81       	ld	r24, Y
     cfa:	82 30       	cpi	r24, 0x02	; 2
     cfc:	08 f4       	brcc	.+2      	; 0xd00 <_fpadd_parts+0x24>
     cfe:	33 c1       	rjmp	.+614    	; 0xf66 <_fpadd_parts+0x28a>
     d00:	94 30       	cpi	r25, 0x04	; 4
     d02:	69 f4       	brne	.+26     	; 0xd1e <_fpadd_parts+0x42>
     d04:	84 30       	cpi	r24, 0x04	; 4
     d06:	09 f0       	breq	.+2      	; 0xd0a <_fpadd_parts+0x2e>
     d08:	2f c1       	rjmp	.+606    	; 0xf68 <_fpadd_parts+0x28c>
     d0a:	11 96       	adiw	r26, 0x01	; 1
     d0c:	9c 91       	ld	r25, X
     d0e:	11 97       	sbiw	r26, 0x01	; 1
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	98 17       	cp	r25, r24
     d14:	09 f4       	brne	.+2      	; 0xd18 <_fpadd_parts+0x3c>
     d16:	28 c1       	rjmp	.+592    	; 0xf68 <_fpadd_parts+0x28c>
     d18:	a1 e2       	ldi	r26, 0x21	; 33
     d1a:	b1 e0       	ldi	r27, 0x01	; 1
     d1c:	25 c1       	rjmp	.+586    	; 0xf68 <_fpadd_parts+0x28c>
     d1e:	84 30       	cpi	r24, 0x04	; 4
     d20:	09 f4       	brne	.+2      	; 0xd24 <_fpadd_parts+0x48>
     d22:	21 c1       	rjmp	.+578    	; 0xf66 <_fpadd_parts+0x28a>
     d24:	82 30       	cpi	r24, 0x02	; 2
     d26:	a9 f4       	brne	.+42     	; 0xd52 <_fpadd_parts+0x76>
     d28:	92 30       	cpi	r25, 0x02	; 2
     d2a:	09 f0       	breq	.+2      	; 0xd2e <_fpadd_parts+0x52>
     d2c:	1d c1       	rjmp	.+570    	; 0xf68 <_fpadd_parts+0x28c>
     d2e:	9a 01       	movw	r18, r20
     d30:	ad 01       	movw	r20, r26
     d32:	88 e0       	ldi	r24, 0x08	; 8
     d34:	ea 01       	movw	r28, r20
     d36:	09 90       	ld	r0, Y+
     d38:	ae 01       	movw	r20, r28
     d3a:	e9 01       	movw	r28, r18
     d3c:	09 92       	st	Y+, r0
     d3e:	9e 01       	movw	r18, r28
     d40:	81 50       	subi	r24, 0x01	; 1
     d42:	c1 f7       	brne	.-16     	; 0xd34 <_fpadd_parts+0x58>
     d44:	e2 01       	movw	r28, r4
     d46:	89 81       	ldd	r24, Y+1	; 0x01
     d48:	11 96       	adiw	r26, 0x01	; 1
     d4a:	9c 91       	ld	r25, X
     d4c:	89 23       	and	r24, r25
     d4e:	81 83       	std	Z+1, r24	; 0x01
     d50:	08 c1       	rjmp	.+528    	; 0xf62 <_fpadd_parts+0x286>
     d52:	92 30       	cpi	r25, 0x02	; 2
     d54:	09 f4       	brne	.+2      	; 0xd58 <_fpadd_parts+0x7c>
     d56:	07 c1       	rjmp	.+526    	; 0xf66 <_fpadd_parts+0x28a>
     d58:	12 96       	adiw	r26, 0x02	; 2
     d5a:	2d 90       	ld	r2, X+
     d5c:	3c 90       	ld	r3, X
     d5e:	13 97       	sbiw	r26, 0x03	; 3
     d60:	eb 01       	movw	r28, r22
     d62:	8a 81       	ldd	r24, Y+2	; 0x02
     d64:	9b 81       	ldd	r25, Y+3	; 0x03
     d66:	14 96       	adiw	r26, 0x04	; 4
     d68:	ad 90       	ld	r10, X+
     d6a:	bd 90       	ld	r11, X+
     d6c:	cd 90       	ld	r12, X+
     d6e:	dc 90       	ld	r13, X
     d70:	17 97       	sbiw	r26, 0x07	; 7
     d72:	ec 80       	ldd	r14, Y+4	; 0x04
     d74:	fd 80       	ldd	r15, Y+5	; 0x05
     d76:	0e 81       	ldd	r16, Y+6	; 0x06
     d78:	1f 81       	ldd	r17, Y+7	; 0x07
     d7a:	91 01       	movw	r18, r2
     d7c:	28 1b       	sub	r18, r24
     d7e:	39 0b       	sbc	r19, r25
     d80:	b9 01       	movw	r22, r18
     d82:	37 ff       	sbrs	r19, 7
     d84:	04 c0       	rjmp	.+8      	; 0xd8e <_fpadd_parts+0xb2>
     d86:	66 27       	eor	r22, r22
     d88:	77 27       	eor	r23, r23
     d8a:	62 1b       	sub	r22, r18
     d8c:	73 0b       	sbc	r23, r19
     d8e:	60 32       	cpi	r22, 0x20	; 32
     d90:	71 05       	cpc	r23, r1
     d92:	0c f0       	brlt	.+2      	; 0xd96 <_fpadd_parts+0xba>
     d94:	61 c0       	rjmp	.+194    	; 0xe58 <_fpadd_parts+0x17c>
     d96:	12 16       	cp	r1, r18
     d98:	13 06       	cpc	r1, r19
     d9a:	6c f5       	brge	.+90     	; 0xdf6 <_fpadd_parts+0x11a>
     d9c:	37 01       	movw	r6, r14
     d9e:	48 01       	movw	r8, r16
     da0:	06 2e       	mov	r0, r22
     da2:	04 c0       	rjmp	.+8      	; 0xdac <_fpadd_parts+0xd0>
     da4:	96 94       	lsr	r9
     da6:	87 94       	ror	r8
     da8:	77 94       	ror	r7
     daa:	67 94       	ror	r6
     dac:	0a 94       	dec	r0
     dae:	d2 f7       	brpl	.-12     	; 0xda4 <_fpadd_parts+0xc8>
     db0:	21 e0       	ldi	r18, 0x01	; 1
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	40 e0       	ldi	r20, 0x00	; 0
     db6:	50 e0       	ldi	r21, 0x00	; 0
     db8:	04 c0       	rjmp	.+8      	; 0xdc2 <_fpadd_parts+0xe6>
     dba:	22 0f       	add	r18, r18
     dbc:	33 1f       	adc	r19, r19
     dbe:	44 1f       	adc	r20, r20
     dc0:	55 1f       	adc	r21, r21
     dc2:	6a 95       	dec	r22
     dc4:	d2 f7       	brpl	.-12     	; 0xdba <_fpadd_parts+0xde>
     dc6:	21 50       	subi	r18, 0x01	; 1
     dc8:	30 40       	sbci	r19, 0x00	; 0
     dca:	40 40       	sbci	r20, 0x00	; 0
     dcc:	50 40       	sbci	r21, 0x00	; 0
     dce:	2e 21       	and	r18, r14
     dd0:	3f 21       	and	r19, r15
     dd2:	40 23       	and	r20, r16
     dd4:	51 23       	and	r21, r17
     dd6:	21 15       	cp	r18, r1
     dd8:	31 05       	cpc	r19, r1
     dda:	41 05       	cpc	r20, r1
     ddc:	51 05       	cpc	r21, r1
     dde:	21 f0       	breq	.+8      	; 0xde8 <_fpadd_parts+0x10c>
     de0:	21 e0       	ldi	r18, 0x01	; 1
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	40 e0       	ldi	r20, 0x00	; 0
     de6:	50 e0       	ldi	r21, 0x00	; 0
     de8:	79 01       	movw	r14, r18
     dea:	8a 01       	movw	r16, r20
     dec:	e6 28       	or	r14, r6
     dee:	f7 28       	or	r15, r7
     df0:	08 29       	or	r16, r8
     df2:	19 29       	or	r17, r9
     df4:	3c c0       	rjmp	.+120    	; 0xe6e <_fpadd_parts+0x192>
     df6:	23 2b       	or	r18, r19
     df8:	d1 f1       	breq	.+116    	; 0xe6e <_fpadd_parts+0x192>
     dfa:	26 0e       	add	r2, r22
     dfc:	37 1e       	adc	r3, r23
     dfe:	35 01       	movw	r6, r10
     e00:	46 01       	movw	r8, r12
     e02:	06 2e       	mov	r0, r22
     e04:	04 c0       	rjmp	.+8      	; 0xe0e <_fpadd_parts+0x132>
     e06:	96 94       	lsr	r9
     e08:	87 94       	ror	r8
     e0a:	77 94       	ror	r7
     e0c:	67 94       	ror	r6
     e0e:	0a 94       	dec	r0
     e10:	d2 f7       	brpl	.-12     	; 0xe06 <_fpadd_parts+0x12a>
     e12:	21 e0       	ldi	r18, 0x01	; 1
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	40 e0       	ldi	r20, 0x00	; 0
     e18:	50 e0       	ldi	r21, 0x00	; 0
     e1a:	04 c0       	rjmp	.+8      	; 0xe24 <_fpadd_parts+0x148>
     e1c:	22 0f       	add	r18, r18
     e1e:	33 1f       	adc	r19, r19
     e20:	44 1f       	adc	r20, r20
     e22:	55 1f       	adc	r21, r21
     e24:	6a 95       	dec	r22
     e26:	d2 f7       	brpl	.-12     	; 0xe1c <_fpadd_parts+0x140>
     e28:	21 50       	subi	r18, 0x01	; 1
     e2a:	30 40       	sbci	r19, 0x00	; 0
     e2c:	40 40       	sbci	r20, 0x00	; 0
     e2e:	50 40       	sbci	r21, 0x00	; 0
     e30:	2a 21       	and	r18, r10
     e32:	3b 21       	and	r19, r11
     e34:	4c 21       	and	r20, r12
     e36:	5d 21       	and	r21, r13
     e38:	21 15       	cp	r18, r1
     e3a:	31 05       	cpc	r19, r1
     e3c:	41 05       	cpc	r20, r1
     e3e:	51 05       	cpc	r21, r1
     e40:	21 f0       	breq	.+8      	; 0xe4a <_fpadd_parts+0x16e>
     e42:	21 e0       	ldi	r18, 0x01	; 1
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	40 e0       	ldi	r20, 0x00	; 0
     e48:	50 e0       	ldi	r21, 0x00	; 0
     e4a:	59 01       	movw	r10, r18
     e4c:	6a 01       	movw	r12, r20
     e4e:	a6 28       	or	r10, r6
     e50:	b7 28       	or	r11, r7
     e52:	c8 28       	or	r12, r8
     e54:	d9 28       	or	r13, r9
     e56:	0b c0       	rjmp	.+22     	; 0xe6e <_fpadd_parts+0x192>
     e58:	82 15       	cp	r24, r2
     e5a:	93 05       	cpc	r25, r3
     e5c:	2c f0       	brlt	.+10     	; 0xe68 <_fpadd_parts+0x18c>
     e5e:	1c 01       	movw	r2, r24
     e60:	aa 24       	eor	r10, r10
     e62:	bb 24       	eor	r11, r11
     e64:	65 01       	movw	r12, r10
     e66:	03 c0       	rjmp	.+6      	; 0xe6e <_fpadd_parts+0x192>
     e68:	ee 24       	eor	r14, r14
     e6a:	ff 24       	eor	r15, r15
     e6c:	87 01       	movw	r16, r14
     e6e:	11 96       	adiw	r26, 0x01	; 1
     e70:	9c 91       	ld	r25, X
     e72:	d2 01       	movw	r26, r4
     e74:	11 96       	adiw	r26, 0x01	; 1
     e76:	8c 91       	ld	r24, X
     e78:	98 17       	cp	r25, r24
     e7a:	09 f4       	brne	.+2      	; 0xe7e <_fpadd_parts+0x1a2>
     e7c:	45 c0       	rjmp	.+138    	; 0xf08 <_fpadd_parts+0x22c>
     e7e:	99 23       	and	r25, r25
     e80:	39 f0       	breq	.+14     	; 0xe90 <_fpadd_parts+0x1b4>
     e82:	a8 01       	movw	r20, r16
     e84:	97 01       	movw	r18, r14
     e86:	2a 19       	sub	r18, r10
     e88:	3b 09       	sbc	r19, r11
     e8a:	4c 09       	sbc	r20, r12
     e8c:	5d 09       	sbc	r21, r13
     e8e:	06 c0       	rjmp	.+12     	; 0xe9c <_fpadd_parts+0x1c0>
     e90:	a6 01       	movw	r20, r12
     e92:	95 01       	movw	r18, r10
     e94:	2e 19       	sub	r18, r14
     e96:	3f 09       	sbc	r19, r15
     e98:	40 0b       	sbc	r20, r16
     e9a:	51 0b       	sbc	r21, r17
     e9c:	57 fd       	sbrc	r21, 7
     e9e:	08 c0       	rjmp	.+16     	; 0xeb0 <_fpadd_parts+0x1d4>
     ea0:	11 82       	std	Z+1, r1	; 0x01
     ea2:	33 82       	std	Z+3, r3	; 0x03
     ea4:	22 82       	std	Z+2, r2	; 0x02
     ea6:	24 83       	std	Z+4, r18	; 0x04
     ea8:	35 83       	std	Z+5, r19	; 0x05
     eaa:	46 83       	std	Z+6, r20	; 0x06
     eac:	57 83       	std	Z+7, r21	; 0x07
     eae:	1d c0       	rjmp	.+58     	; 0xeea <_fpadd_parts+0x20e>
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	81 83       	std	Z+1, r24	; 0x01
     eb4:	33 82       	std	Z+3, r3	; 0x03
     eb6:	22 82       	std	Z+2, r2	; 0x02
     eb8:	88 27       	eor	r24, r24
     eba:	99 27       	eor	r25, r25
     ebc:	dc 01       	movw	r26, r24
     ebe:	82 1b       	sub	r24, r18
     ec0:	93 0b       	sbc	r25, r19
     ec2:	a4 0b       	sbc	r26, r20
     ec4:	b5 0b       	sbc	r27, r21
     ec6:	84 83       	std	Z+4, r24	; 0x04
     ec8:	95 83       	std	Z+5, r25	; 0x05
     eca:	a6 83       	std	Z+6, r26	; 0x06
     ecc:	b7 83       	std	Z+7, r27	; 0x07
     ece:	0d c0       	rjmp	.+26     	; 0xeea <_fpadd_parts+0x20e>
     ed0:	22 0f       	add	r18, r18
     ed2:	33 1f       	adc	r19, r19
     ed4:	44 1f       	adc	r20, r20
     ed6:	55 1f       	adc	r21, r21
     ed8:	24 83       	std	Z+4, r18	; 0x04
     eda:	35 83       	std	Z+5, r19	; 0x05
     edc:	46 83       	std	Z+6, r20	; 0x06
     ede:	57 83       	std	Z+7, r21	; 0x07
     ee0:	82 81       	ldd	r24, Z+2	; 0x02
     ee2:	93 81       	ldd	r25, Z+3	; 0x03
     ee4:	01 97       	sbiw	r24, 0x01	; 1
     ee6:	93 83       	std	Z+3, r25	; 0x03
     ee8:	82 83       	std	Z+2, r24	; 0x02
     eea:	24 81       	ldd	r18, Z+4	; 0x04
     eec:	35 81       	ldd	r19, Z+5	; 0x05
     eee:	46 81       	ldd	r20, Z+6	; 0x06
     ef0:	57 81       	ldd	r21, Z+7	; 0x07
     ef2:	da 01       	movw	r26, r20
     ef4:	c9 01       	movw	r24, r18
     ef6:	01 97       	sbiw	r24, 0x01	; 1
     ef8:	a1 09       	sbc	r26, r1
     efa:	b1 09       	sbc	r27, r1
     efc:	8f 5f       	subi	r24, 0xFF	; 255
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	af 4f       	sbci	r26, 0xFF	; 255
     f02:	bf 43       	sbci	r27, 0x3F	; 63
     f04:	28 f3       	brcs	.-54     	; 0xed0 <_fpadd_parts+0x1f4>
     f06:	0b c0       	rjmp	.+22     	; 0xf1e <_fpadd_parts+0x242>
     f08:	91 83       	std	Z+1, r25	; 0x01
     f0a:	33 82       	std	Z+3, r3	; 0x03
     f0c:	22 82       	std	Z+2, r2	; 0x02
     f0e:	ea 0c       	add	r14, r10
     f10:	fb 1c       	adc	r15, r11
     f12:	0c 1d       	adc	r16, r12
     f14:	1d 1d       	adc	r17, r13
     f16:	e4 82       	std	Z+4, r14	; 0x04
     f18:	f5 82       	std	Z+5, r15	; 0x05
     f1a:	06 83       	std	Z+6, r16	; 0x06
     f1c:	17 83       	std	Z+7, r17	; 0x07
     f1e:	83 e0       	ldi	r24, 0x03	; 3
     f20:	80 83       	st	Z, r24
     f22:	24 81       	ldd	r18, Z+4	; 0x04
     f24:	35 81       	ldd	r19, Z+5	; 0x05
     f26:	46 81       	ldd	r20, Z+6	; 0x06
     f28:	57 81       	ldd	r21, Z+7	; 0x07
     f2a:	57 ff       	sbrs	r21, 7
     f2c:	1a c0       	rjmp	.+52     	; 0xf62 <_fpadd_parts+0x286>
     f2e:	c9 01       	movw	r24, r18
     f30:	aa 27       	eor	r26, r26
     f32:	97 fd       	sbrc	r25, 7
     f34:	a0 95       	com	r26
     f36:	ba 2f       	mov	r27, r26
     f38:	81 70       	andi	r24, 0x01	; 1
     f3a:	90 70       	andi	r25, 0x00	; 0
     f3c:	a0 70       	andi	r26, 0x00	; 0
     f3e:	b0 70       	andi	r27, 0x00	; 0
     f40:	56 95       	lsr	r21
     f42:	47 95       	ror	r20
     f44:	37 95       	ror	r19
     f46:	27 95       	ror	r18
     f48:	82 2b       	or	r24, r18
     f4a:	93 2b       	or	r25, r19
     f4c:	a4 2b       	or	r26, r20
     f4e:	b5 2b       	or	r27, r21
     f50:	84 83       	std	Z+4, r24	; 0x04
     f52:	95 83       	std	Z+5, r25	; 0x05
     f54:	a6 83       	std	Z+6, r26	; 0x06
     f56:	b7 83       	std	Z+7, r27	; 0x07
     f58:	82 81       	ldd	r24, Z+2	; 0x02
     f5a:	93 81       	ldd	r25, Z+3	; 0x03
     f5c:	01 96       	adiw	r24, 0x01	; 1
     f5e:	93 83       	std	Z+3, r25	; 0x03
     f60:	82 83       	std	Z+2, r24	; 0x02
     f62:	df 01       	movw	r26, r30
     f64:	01 c0       	rjmp	.+2      	; 0xf68 <_fpadd_parts+0x28c>
     f66:	d2 01       	movw	r26, r4
     f68:	cd 01       	movw	r24, r26
     f6a:	cd b7       	in	r28, 0x3d	; 61
     f6c:	de b7       	in	r29, 0x3e	; 62
     f6e:	e2 e1       	ldi	r30, 0x12	; 18
     f70:	0c 94 8a 0c 	jmp	0x1914	; 0x1914 <__epilogue_restores__>

00000f74 <__subsf3>:
     f74:	a0 e2       	ldi	r26, 0x20	; 32
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	e0 ec       	ldi	r30, 0xC0	; 192
     f7a:	f7 e0       	ldi	r31, 0x07	; 7
     f7c:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__prologue_saves__+0x18>
     f80:	69 83       	std	Y+1, r22	; 0x01
     f82:	7a 83       	std	Y+2, r23	; 0x02
     f84:	8b 83       	std	Y+3, r24	; 0x03
     f86:	9c 83       	std	Y+4, r25	; 0x04
     f88:	2d 83       	std	Y+5, r18	; 0x05
     f8a:	3e 83       	std	Y+6, r19	; 0x06
     f8c:	4f 83       	std	Y+7, r20	; 0x07
     f8e:	58 87       	std	Y+8, r21	; 0x08
     f90:	e9 e0       	ldi	r30, 0x09	; 9
     f92:	ee 2e       	mov	r14, r30
     f94:	f1 2c       	mov	r15, r1
     f96:	ec 0e       	add	r14, r28
     f98:	fd 1e       	adc	r15, r29
     f9a:	ce 01       	movw	r24, r28
     f9c:	01 96       	adiw	r24, 0x01	; 1
     f9e:	b7 01       	movw	r22, r14
     fa0:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
     fa4:	8e 01       	movw	r16, r28
     fa6:	0f 5e       	subi	r16, 0xEF	; 239
     fa8:	1f 4f       	sbci	r17, 0xFF	; 255
     faa:	ce 01       	movw	r24, r28
     fac:	05 96       	adiw	r24, 0x05	; 5
     fae:	b8 01       	movw	r22, r16
     fb0:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
     fb4:	8a 89       	ldd	r24, Y+18	; 0x12
     fb6:	91 e0       	ldi	r25, 0x01	; 1
     fb8:	89 27       	eor	r24, r25
     fba:	8a 8b       	std	Y+18, r24	; 0x12
     fbc:	c7 01       	movw	r24, r14
     fbe:	b8 01       	movw	r22, r16
     fc0:	ae 01       	movw	r20, r28
     fc2:	47 5e       	subi	r20, 0xE7	; 231
     fc4:	5f 4f       	sbci	r21, 0xFF	; 255
     fc6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <_fpadd_parts>
     fca:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__pack_f>
     fce:	a0 96       	adiw	r28, 0x20	; 32
     fd0:	e6 e0       	ldi	r30, 0x06	; 6
     fd2:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__epilogue_restores__+0x18>

00000fd6 <__addsf3>:
     fd6:	a0 e2       	ldi	r26, 0x20	; 32
     fd8:	b0 e0       	ldi	r27, 0x00	; 0
     fda:	e1 ef       	ldi	r30, 0xF1	; 241
     fdc:	f7 e0       	ldi	r31, 0x07	; 7
     fde:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__prologue_saves__+0x18>
     fe2:	69 83       	std	Y+1, r22	; 0x01
     fe4:	7a 83       	std	Y+2, r23	; 0x02
     fe6:	8b 83       	std	Y+3, r24	; 0x03
     fe8:	9c 83       	std	Y+4, r25	; 0x04
     fea:	2d 83       	std	Y+5, r18	; 0x05
     fec:	3e 83       	std	Y+6, r19	; 0x06
     fee:	4f 83       	std	Y+7, r20	; 0x07
     ff0:	58 87       	std	Y+8, r21	; 0x08
     ff2:	f9 e0       	ldi	r31, 0x09	; 9
     ff4:	ef 2e       	mov	r14, r31
     ff6:	f1 2c       	mov	r15, r1
     ff8:	ec 0e       	add	r14, r28
     ffa:	fd 1e       	adc	r15, r29
     ffc:	ce 01       	movw	r24, r28
     ffe:	01 96       	adiw	r24, 0x01	; 1
    1000:	b7 01       	movw	r22, r14
    1002:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    1006:	8e 01       	movw	r16, r28
    1008:	0f 5e       	subi	r16, 0xEF	; 239
    100a:	1f 4f       	sbci	r17, 0xFF	; 255
    100c:	ce 01       	movw	r24, r28
    100e:	05 96       	adiw	r24, 0x05	; 5
    1010:	b8 01       	movw	r22, r16
    1012:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    1016:	c7 01       	movw	r24, r14
    1018:	b8 01       	movw	r22, r16
    101a:	ae 01       	movw	r20, r28
    101c:	47 5e       	subi	r20, 0xE7	; 231
    101e:	5f 4f       	sbci	r21, 0xFF	; 255
    1020:	0e 94 6e 06 	call	0xcdc	; 0xcdc <_fpadd_parts>
    1024:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__pack_f>
    1028:	a0 96       	adiw	r28, 0x20	; 32
    102a:	e6 e0       	ldi	r30, 0x06	; 6
    102c:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__epilogue_restores__+0x18>

00001030 <__mulsf3>:
    1030:	a0 e2       	ldi	r26, 0x20	; 32
    1032:	b0 e0       	ldi	r27, 0x00	; 0
    1034:	ee e1       	ldi	r30, 0x1E	; 30
    1036:	f8 e0       	ldi	r31, 0x08	; 8
    1038:	0c 94 6e 0c 	jmp	0x18dc	; 0x18dc <__prologue_saves__>
    103c:	69 83       	std	Y+1, r22	; 0x01
    103e:	7a 83       	std	Y+2, r23	; 0x02
    1040:	8b 83       	std	Y+3, r24	; 0x03
    1042:	9c 83       	std	Y+4, r25	; 0x04
    1044:	2d 83       	std	Y+5, r18	; 0x05
    1046:	3e 83       	std	Y+6, r19	; 0x06
    1048:	4f 83       	std	Y+7, r20	; 0x07
    104a:	58 87       	std	Y+8, r21	; 0x08
    104c:	ce 01       	movw	r24, r28
    104e:	01 96       	adiw	r24, 0x01	; 1
    1050:	be 01       	movw	r22, r28
    1052:	67 5f       	subi	r22, 0xF7	; 247
    1054:	7f 4f       	sbci	r23, 0xFF	; 255
    1056:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    105a:	ce 01       	movw	r24, r28
    105c:	05 96       	adiw	r24, 0x05	; 5
    105e:	be 01       	movw	r22, r28
    1060:	6f 5e       	subi	r22, 0xEF	; 239
    1062:	7f 4f       	sbci	r23, 0xFF	; 255
    1064:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    1068:	99 85       	ldd	r25, Y+9	; 0x09
    106a:	92 30       	cpi	r25, 0x02	; 2
    106c:	88 f0       	brcs	.+34     	; 0x1090 <__mulsf3+0x60>
    106e:	89 89       	ldd	r24, Y+17	; 0x11
    1070:	82 30       	cpi	r24, 0x02	; 2
    1072:	c8 f0       	brcs	.+50     	; 0x10a6 <__mulsf3+0x76>
    1074:	94 30       	cpi	r25, 0x04	; 4
    1076:	19 f4       	brne	.+6      	; 0x107e <__mulsf3+0x4e>
    1078:	82 30       	cpi	r24, 0x02	; 2
    107a:	51 f4       	brne	.+20     	; 0x1090 <__mulsf3+0x60>
    107c:	04 c0       	rjmp	.+8      	; 0x1086 <__mulsf3+0x56>
    107e:	84 30       	cpi	r24, 0x04	; 4
    1080:	29 f4       	brne	.+10     	; 0x108c <__mulsf3+0x5c>
    1082:	92 30       	cpi	r25, 0x02	; 2
    1084:	81 f4       	brne	.+32     	; 0x10a6 <__mulsf3+0x76>
    1086:	81 e2       	ldi	r24, 0x21	; 33
    1088:	91 e0       	ldi	r25, 0x01	; 1
    108a:	c6 c0       	rjmp	.+396    	; 0x1218 <__mulsf3+0x1e8>
    108c:	92 30       	cpi	r25, 0x02	; 2
    108e:	49 f4       	brne	.+18     	; 0x10a2 <__mulsf3+0x72>
    1090:	20 e0       	ldi	r18, 0x00	; 0
    1092:	9a 85       	ldd	r25, Y+10	; 0x0a
    1094:	8a 89       	ldd	r24, Y+18	; 0x12
    1096:	98 13       	cpse	r25, r24
    1098:	21 e0       	ldi	r18, 0x01	; 1
    109a:	2a 87       	std	Y+10, r18	; 0x0a
    109c:	ce 01       	movw	r24, r28
    109e:	09 96       	adiw	r24, 0x09	; 9
    10a0:	bb c0       	rjmp	.+374    	; 0x1218 <__mulsf3+0x1e8>
    10a2:	82 30       	cpi	r24, 0x02	; 2
    10a4:	49 f4       	brne	.+18     	; 0x10b8 <__mulsf3+0x88>
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    10aa:	8a 89       	ldd	r24, Y+18	; 0x12
    10ac:	98 13       	cpse	r25, r24
    10ae:	21 e0       	ldi	r18, 0x01	; 1
    10b0:	2a 8b       	std	Y+18, r18	; 0x12
    10b2:	ce 01       	movw	r24, r28
    10b4:	41 96       	adiw	r24, 0x11	; 17
    10b6:	b0 c0       	rjmp	.+352    	; 0x1218 <__mulsf3+0x1e8>
    10b8:	2d 84       	ldd	r2, Y+13	; 0x0d
    10ba:	3e 84       	ldd	r3, Y+14	; 0x0e
    10bc:	4f 84       	ldd	r4, Y+15	; 0x0f
    10be:	58 88       	ldd	r5, Y+16	; 0x10
    10c0:	6d 88       	ldd	r6, Y+21	; 0x15
    10c2:	7e 88       	ldd	r7, Y+22	; 0x16
    10c4:	8f 88       	ldd	r8, Y+23	; 0x17
    10c6:	98 8c       	ldd	r9, Y+24	; 0x18
    10c8:	ee 24       	eor	r14, r14
    10ca:	ff 24       	eor	r15, r15
    10cc:	87 01       	movw	r16, r14
    10ce:	aa 24       	eor	r10, r10
    10d0:	bb 24       	eor	r11, r11
    10d2:	65 01       	movw	r12, r10
    10d4:	40 e0       	ldi	r20, 0x00	; 0
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	e0 e0       	ldi	r30, 0x00	; 0
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	c1 01       	movw	r24, r2
    10e2:	81 70       	andi	r24, 0x01	; 1
    10e4:	90 70       	andi	r25, 0x00	; 0
    10e6:	89 2b       	or	r24, r25
    10e8:	e9 f0       	breq	.+58     	; 0x1124 <__mulsf3+0xf4>
    10ea:	e6 0c       	add	r14, r6
    10ec:	f7 1c       	adc	r15, r7
    10ee:	08 1d       	adc	r16, r8
    10f0:	19 1d       	adc	r17, r9
    10f2:	9a 01       	movw	r18, r20
    10f4:	ab 01       	movw	r20, r22
    10f6:	2a 0d       	add	r18, r10
    10f8:	3b 1d       	adc	r19, r11
    10fa:	4c 1d       	adc	r20, r12
    10fc:	5d 1d       	adc	r21, r13
    10fe:	80 e0       	ldi	r24, 0x00	; 0
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	a0 e0       	ldi	r26, 0x00	; 0
    1104:	b0 e0       	ldi	r27, 0x00	; 0
    1106:	e6 14       	cp	r14, r6
    1108:	f7 04       	cpc	r15, r7
    110a:	08 05       	cpc	r16, r8
    110c:	19 05       	cpc	r17, r9
    110e:	20 f4       	brcc	.+8      	; 0x1118 <__mulsf3+0xe8>
    1110:	81 e0       	ldi	r24, 0x01	; 1
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	a0 e0       	ldi	r26, 0x00	; 0
    1116:	b0 e0       	ldi	r27, 0x00	; 0
    1118:	ba 01       	movw	r22, r20
    111a:	a9 01       	movw	r20, r18
    111c:	48 0f       	add	r20, r24
    111e:	59 1f       	adc	r21, r25
    1120:	6a 1f       	adc	r22, r26
    1122:	7b 1f       	adc	r23, r27
    1124:	aa 0c       	add	r10, r10
    1126:	bb 1c       	adc	r11, r11
    1128:	cc 1c       	adc	r12, r12
    112a:	dd 1c       	adc	r13, r13
    112c:	97 fe       	sbrs	r9, 7
    112e:	08 c0       	rjmp	.+16     	; 0x1140 <__mulsf3+0x110>
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	a0 e0       	ldi	r26, 0x00	; 0
    1136:	b0 e0       	ldi	r27, 0x00	; 0
    1138:	a8 2a       	or	r10, r24
    113a:	b9 2a       	or	r11, r25
    113c:	ca 2a       	or	r12, r26
    113e:	db 2a       	or	r13, r27
    1140:	31 96       	adiw	r30, 0x01	; 1
    1142:	e0 32       	cpi	r30, 0x20	; 32
    1144:	f1 05       	cpc	r31, r1
    1146:	49 f0       	breq	.+18     	; 0x115a <__mulsf3+0x12a>
    1148:	66 0c       	add	r6, r6
    114a:	77 1c       	adc	r7, r7
    114c:	88 1c       	adc	r8, r8
    114e:	99 1c       	adc	r9, r9
    1150:	56 94       	lsr	r5
    1152:	47 94       	ror	r4
    1154:	37 94       	ror	r3
    1156:	27 94       	ror	r2
    1158:	c3 cf       	rjmp	.-122    	; 0x10e0 <__mulsf3+0xb0>
    115a:	fa 85       	ldd	r31, Y+10	; 0x0a
    115c:	ea 89       	ldd	r30, Y+18	; 0x12
    115e:	2b 89       	ldd	r18, Y+19	; 0x13
    1160:	3c 89       	ldd	r19, Y+20	; 0x14
    1162:	8b 85       	ldd	r24, Y+11	; 0x0b
    1164:	9c 85       	ldd	r25, Y+12	; 0x0c
    1166:	28 0f       	add	r18, r24
    1168:	39 1f       	adc	r19, r25
    116a:	2e 5f       	subi	r18, 0xFE	; 254
    116c:	3f 4f       	sbci	r19, 0xFF	; 255
    116e:	17 c0       	rjmp	.+46     	; 0x119e <__mulsf3+0x16e>
    1170:	ca 01       	movw	r24, r20
    1172:	81 70       	andi	r24, 0x01	; 1
    1174:	90 70       	andi	r25, 0x00	; 0
    1176:	89 2b       	or	r24, r25
    1178:	61 f0       	breq	.+24     	; 0x1192 <__mulsf3+0x162>
    117a:	16 95       	lsr	r17
    117c:	07 95       	ror	r16
    117e:	f7 94       	ror	r15
    1180:	e7 94       	ror	r14
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	a0 e0       	ldi	r26, 0x00	; 0
    1188:	b0 e8       	ldi	r27, 0x80	; 128
    118a:	e8 2a       	or	r14, r24
    118c:	f9 2a       	or	r15, r25
    118e:	0a 2b       	or	r16, r26
    1190:	1b 2b       	or	r17, r27
    1192:	76 95       	lsr	r23
    1194:	67 95       	ror	r22
    1196:	57 95       	ror	r21
    1198:	47 95       	ror	r20
    119a:	2f 5f       	subi	r18, 0xFF	; 255
    119c:	3f 4f       	sbci	r19, 0xFF	; 255
    119e:	77 fd       	sbrc	r23, 7
    11a0:	e7 cf       	rjmp	.-50     	; 0x1170 <__mulsf3+0x140>
    11a2:	0c c0       	rjmp	.+24     	; 0x11bc <__mulsf3+0x18c>
    11a4:	44 0f       	add	r20, r20
    11a6:	55 1f       	adc	r21, r21
    11a8:	66 1f       	adc	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	17 fd       	sbrc	r17, 7
    11ae:	41 60       	ori	r20, 0x01	; 1
    11b0:	ee 0c       	add	r14, r14
    11b2:	ff 1c       	adc	r15, r15
    11b4:	00 1f       	adc	r16, r16
    11b6:	11 1f       	adc	r17, r17
    11b8:	21 50       	subi	r18, 0x01	; 1
    11ba:	30 40       	sbci	r19, 0x00	; 0
    11bc:	40 30       	cpi	r20, 0x00	; 0
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	59 07       	cpc	r21, r25
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	69 07       	cpc	r22, r25
    11c6:	90 e4       	ldi	r25, 0x40	; 64
    11c8:	79 07       	cpc	r23, r25
    11ca:	60 f3       	brcs	.-40     	; 0x11a4 <__mulsf3+0x174>
    11cc:	2b 8f       	std	Y+27, r18	; 0x1b
    11ce:	3c 8f       	std	Y+28, r19	; 0x1c
    11d0:	db 01       	movw	r26, r22
    11d2:	ca 01       	movw	r24, r20
    11d4:	8f 77       	andi	r24, 0x7F	; 127
    11d6:	90 70       	andi	r25, 0x00	; 0
    11d8:	a0 70       	andi	r26, 0x00	; 0
    11da:	b0 70       	andi	r27, 0x00	; 0
    11dc:	80 34       	cpi	r24, 0x40	; 64
    11de:	91 05       	cpc	r25, r1
    11e0:	a1 05       	cpc	r26, r1
    11e2:	b1 05       	cpc	r27, r1
    11e4:	61 f4       	brne	.+24     	; 0x11fe <__mulsf3+0x1ce>
    11e6:	47 fd       	sbrc	r20, 7
    11e8:	0a c0       	rjmp	.+20     	; 0x11fe <__mulsf3+0x1ce>
    11ea:	e1 14       	cp	r14, r1
    11ec:	f1 04       	cpc	r15, r1
    11ee:	01 05       	cpc	r16, r1
    11f0:	11 05       	cpc	r17, r1
    11f2:	29 f0       	breq	.+10     	; 0x11fe <__mulsf3+0x1ce>
    11f4:	40 5c       	subi	r20, 0xC0	; 192
    11f6:	5f 4f       	sbci	r21, 0xFF	; 255
    11f8:	6f 4f       	sbci	r22, 0xFF	; 255
    11fa:	7f 4f       	sbci	r23, 0xFF	; 255
    11fc:	40 78       	andi	r20, 0x80	; 128
    11fe:	1a 8e       	std	Y+26, r1	; 0x1a
    1200:	fe 17       	cp	r31, r30
    1202:	11 f0       	breq	.+4      	; 0x1208 <__mulsf3+0x1d8>
    1204:	81 e0       	ldi	r24, 0x01	; 1
    1206:	8a 8f       	std	Y+26, r24	; 0x1a
    1208:	4d 8f       	std	Y+29, r20	; 0x1d
    120a:	5e 8f       	std	Y+30, r21	; 0x1e
    120c:	6f 8f       	std	Y+31, r22	; 0x1f
    120e:	78 a3       	std	Y+32, r23	; 0x20
    1210:	83 e0       	ldi	r24, 0x03	; 3
    1212:	89 8f       	std	Y+25, r24	; 0x19
    1214:	ce 01       	movw	r24, r28
    1216:	49 96       	adiw	r24, 0x19	; 25
    1218:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__pack_f>
    121c:	a0 96       	adiw	r28, 0x20	; 32
    121e:	e2 e1       	ldi	r30, 0x12	; 18
    1220:	0c 94 8a 0c 	jmp	0x1914	; 0x1914 <__epilogue_restores__>

00001224 <__gtsf2>:
    1224:	a8 e1       	ldi	r26, 0x18	; 24
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	e8 e1       	ldi	r30, 0x18	; 24
    122a:	f9 e0       	ldi	r31, 0x09	; 9
    122c:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__prologue_saves__+0x18>
    1230:	69 83       	std	Y+1, r22	; 0x01
    1232:	7a 83       	std	Y+2, r23	; 0x02
    1234:	8b 83       	std	Y+3, r24	; 0x03
    1236:	9c 83       	std	Y+4, r25	; 0x04
    1238:	2d 83       	std	Y+5, r18	; 0x05
    123a:	3e 83       	std	Y+6, r19	; 0x06
    123c:	4f 83       	std	Y+7, r20	; 0x07
    123e:	58 87       	std	Y+8, r21	; 0x08
    1240:	89 e0       	ldi	r24, 0x09	; 9
    1242:	e8 2e       	mov	r14, r24
    1244:	f1 2c       	mov	r15, r1
    1246:	ec 0e       	add	r14, r28
    1248:	fd 1e       	adc	r15, r29
    124a:	ce 01       	movw	r24, r28
    124c:	01 96       	adiw	r24, 0x01	; 1
    124e:	b7 01       	movw	r22, r14
    1250:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    1254:	8e 01       	movw	r16, r28
    1256:	0f 5e       	subi	r16, 0xEF	; 239
    1258:	1f 4f       	sbci	r17, 0xFF	; 255
    125a:	ce 01       	movw	r24, r28
    125c:	05 96       	adiw	r24, 0x05	; 5
    125e:	b8 01       	movw	r22, r16
    1260:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    1264:	89 85       	ldd	r24, Y+9	; 0x09
    1266:	82 30       	cpi	r24, 0x02	; 2
    1268:	40 f0       	brcs	.+16     	; 0x127a <__gtsf2+0x56>
    126a:	89 89       	ldd	r24, Y+17	; 0x11
    126c:	82 30       	cpi	r24, 0x02	; 2
    126e:	28 f0       	brcs	.+10     	; 0x127a <__gtsf2+0x56>
    1270:	c7 01       	movw	r24, r14
    1272:	b8 01       	movw	r22, r16
    1274:	0e 94 15 0c 	call	0x182a	; 0x182a <__fpcmp_parts_f>
    1278:	01 c0       	rjmp	.+2      	; 0x127c <__gtsf2+0x58>
    127a:	8f ef       	ldi	r24, 0xFF	; 255
    127c:	68 96       	adiw	r28, 0x18	; 24
    127e:	e6 e0       	ldi	r30, 0x06	; 6
    1280:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__epilogue_restores__+0x18>

00001284 <__gesf2>:
    1284:	a8 e1       	ldi	r26, 0x18	; 24
    1286:	b0 e0       	ldi	r27, 0x00	; 0
    1288:	e8 e4       	ldi	r30, 0x48	; 72
    128a:	f9 e0       	ldi	r31, 0x09	; 9
    128c:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__prologue_saves__+0x18>
    1290:	69 83       	std	Y+1, r22	; 0x01
    1292:	7a 83       	std	Y+2, r23	; 0x02
    1294:	8b 83       	std	Y+3, r24	; 0x03
    1296:	9c 83       	std	Y+4, r25	; 0x04
    1298:	2d 83       	std	Y+5, r18	; 0x05
    129a:	3e 83       	std	Y+6, r19	; 0x06
    129c:	4f 83       	std	Y+7, r20	; 0x07
    129e:	58 87       	std	Y+8, r21	; 0x08
    12a0:	89 e0       	ldi	r24, 0x09	; 9
    12a2:	e8 2e       	mov	r14, r24
    12a4:	f1 2c       	mov	r15, r1
    12a6:	ec 0e       	add	r14, r28
    12a8:	fd 1e       	adc	r15, r29
    12aa:	ce 01       	movw	r24, r28
    12ac:	01 96       	adiw	r24, 0x01	; 1
    12ae:	b7 01       	movw	r22, r14
    12b0:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    12b4:	8e 01       	movw	r16, r28
    12b6:	0f 5e       	subi	r16, 0xEF	; 239
    12b8:	1f 4f       	sbci	r17, 0xFF	; 255
    12ba:	ce 01       	movw	r24, r28
    12bc:	05 96       	adiw	r24, 0x05	; 5
    12be:	b8 01       	movw	r22, r16
    12c0:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    12c4:	89 85       	ldd	r24, Y+9	; 0x09
    12c6:	82 30       	cpi	r24, 0x02	; 2
    12c8:	40 f0       	brcs	.+16     	; 0x12da <__gesf2+0x56>
    12ca:	89 89       	ldd	r24, Y+17	; 0x11
    12cc:	82 30       	cpi	r24, 0x02	; 2
    12ce:	28 f0       	brcs	.+10     	; 0x12da <__gesf2+0x56>
    12d0:	c7 01       	movw	r24, r14
    12d2:	b8 01       	movw	r22, r16
    12d4:	0e 94 15 0c 	call	0x182a	; 0x182a <__fpcmp_parts_f>
    12d8:	01 c0       	rjmp	.+2      	; 0x12dc <__gesf2+0x58>
    12da:	8f ef       	ldi	r24, 0xFF	; 255
    12dc:	68 96       	adiw	r28, 0x18	; 24
    12de:	e6 e0       	ldi	r30, 0x06	; 6
    12e0:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__epilogue_restores__+0x18>

000012e4 <__ltsf2>:
    12e4:	a8 e1       	ldi	r26, 0x18	; 24
    12e6:	b0 e0       	ldi	r27, 0x00	; 0
    12e8:	e8 e7       	ldi	r30, 0x78	; 120
    12ea:	f9 e0       	ldi	r31, 0x09	; 9
    12ec:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__prologue_saves__+0x18>
    12f0:	69 83       	std	Y+1, r22	; 0x01
    12f2:	7a 83       	std	Y+2, r23	; 0x02
    12f4:	8b 83       	std	Y+3, r24	; 0x03
    12f6:	9c 83       	std	Y+4, r25	; 0x04
    12f8:	2d 83       	std	Y+5, r18	; 0x05
    12fa:	3e 83       	std	Y+6, r19	; 0x06
    12fc:	4f 83       	std	Y+7, r20	; 0x07
    12fe:	58 87       	std	Y+8, r21	; 0x08
    1300:	89 e0       	ldi	r24, 0x09	; 9
    1302:	e8 2e       	mov	r14, r24
    1304:	f1 2c       	mov	r15, r1
    1306:	ec 0e       	add	r14, r28
    1308:	fd 1e       	adc	r15, r29
    130a:	ce 01       	movw	r24, r28
    130c:	01 96       	adiw	r24, 0x01	; 1
    130e:	b7 01       	movw	r22, r14
    1310:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    1314:	8e 01       	movw	r16, r28
    1316:	0f 5e       	subi	r16, 0xEF	; 239
    1318:	1f 4f       	sbci	r17, 0xFF	; 255
    131a:	ce 01       	movw	r24, r28
    131c:	05 96       	adiw	r24, 0x05	; 5
    131e:	b8 01       	movw	r22, r16
    1320:	0e 94 9d 0b 	call	0x173a	; 0x173a <__unpack_f>
    1324:	89 85       	ldd	r24, Y+9	; 0x09
    1326:	82 30       	cpi	r24, 0x02	; 2
    1328:	40 f0       	brcs	.+16     	; 0x133a <__ltsf2+0x56>
    132a:	89 89       	ldd	r24, Y+17	; 0x11
    132c:	82 30       	cpi	r24, 0x02	; 2
    132e:	28 f0       	brcs	.+10     	; 0x133a <__ltsf2+0x56>
    1330:	c7 01       	movw	r24, r14
    1332:	b8 01       	movw	r22, r16
    1334:	0e 94 15 0c 	call	0x182a	; 0x182a <__fpcmp_parts_f>
    1338:	01 c0       	rjmp	.+2      	; 0x133c <__ltsf2+0x58>
    133a:	81 e0       	ldi	r24, 0x01	; 1
    133c:	68 96       	adiw	r28, 0x18	; 24
    133e:	e6 e0       	ldi	r30, 0x06	; 6
    1340:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__epilogue_restores__+0x18>

00001344 <__floatsisf>:
    1344:	a8 e0       	ldi	r26, 0x08	; 8
    1346:	b0 e0       	ldi	r27, 0x00	; 0
    1348:	e8 ea       	ldi	r30, 0xA8	; 168
    134a:	f9 e0       	ldi	r31, 0x09	; 9
    134c:	0c 94 77 0c 	jmp	0x18ee	; 0x18ee <__prologue_saves__+0x12>
    1350:	9b 01       	movw	r18, r22
    1352:	ac 01       	movw	r20, r24
    1354:	83 e0       	ldi	r24, 0x03	; 3
    1356:	89 83       	std	Y+1, r24	; 0x01
    1358:	da 01       	movw	r26, r20
    135a:	c9 01       	movw	r24, r18
    135c:	88 27       	eor	r24, r24
    135e:	b7 fd       	sbrc	r27, 7
    1360:	83 95       	inc	r24
    1362:	99 27       	eor	r25, r25
    1364:	aa 27       	eor	r26, r26
    1366:	bb 27       	eor	r27, r27
    1368:	b8 2e       	mov	r11, r24
    136a:	21 15       	cp	r18, r1
    136c:	31 05       	cpc	r19, r1
    136e:	41 05       	cpc	r20, r1
    1370:	51 05       	cpc	r21, r1
    1372:	19 f4       	brne	.+6      	; 0x137a <__floatsisf+0x36>
    1374:	82 e0       	ldi	r24, 0x02	; 2
    1376:	89 83       	std	Y+1, r24	; 0x01
    1378:	3a c0       	rjmp	.+116    	; 0x13ee <__floatsisf+0xaa>
    137a:	88 23       	and	r24, r24
    137c:	a9 f0       	breq	.+42     	; 0x13a8 <__floatsisf+0x64>
    137e:	20 30       	cpi	r18, 0x00	; 0
    1380:	80 e0       	ldi	r24, 0x00	; 0
    1382:	38 07       	cpc	r19, r24
    1384:	80 e0       	ldi	r24, 0x00	; 0
    1386:	48 07       	cpc	r20, r24
    1388:	80 e8       	ldi	r24, 0x80	; 128
    138a:	58 07       	cpc	r21, r24
    138c:	29 f4       	brne	.+10     	; 0x1398 <__floatsisf+0x54>
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	9f ec       	ldi	r25, 0xCF	; 207
    1396:	30 c0       	rjmp	.+96     	; 0x13f8 <__floatsisf+0xb4>
    1398:	ee 24       	eor	r14, r14
    139a:	ff 24       	eor	r15, r15
    139c:	87 01       	movw	r16, r14
    139e:	e2 1a       	sub	r14, r18
    13a0:	f3 0a       	sbc	r15, r19
    13a2:	04 0b       	sbc	r16, r20
    13a4:	15 0b       	sbc	r17, r21
    13a6:	02 c0       	rjmp	.+4      	; 0x13ac <__floatsisf+0x68>
    13a8:	79 01       	movw	r14, r18
    13aa:	8a 01       	movw	r16, r20
    13ac:	8e e1       	ldi	r24, 0x1E	; 30
    13ae:	c8 2e       	mov	r12, r24
    13b0:	d1 2c       	mov	r13, r1
    13b2:	dc 82       	std	Y+4, r13	; 0x04
    13b4:	cb 82       	std	Y+3, r12	; 0x03
    13b6:	ed 82       	std	Y+5, r14	; 0x05
    13b8:	fe 82       	std	Y+6, r15	; 0x06
    13ba:	0f 83       	std	Y+7, r16	; 0x07
    13bc:	18 87       	std	Y+8, r17	; 0x08
    13be:	c8 01       	movw	r24, r16
    13c0:	b7 01       	movw	r22, r14
    13c2:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__clzsi2>
    13c6:	01 97       	sbiw	r24, 0x01	; 1
    13c8:	18 16       	cp	r1, r24
    13ca:	19 06       	cpc	r1, r25
    13cc:	84 f4       	brge	.+32     	; 0x13ee <__floatsisf+0xaa>
    13ce:	08 2e       	mov	r0, r24
    13d0:	04 c0       	rjmp	.+8      	; 0x13da <__floatsisf+0x96>
    13d2:	ee 0c       	add	r14, r14
    13d4:	ff 1c       	adc	r15, r15
    13d6:	00 1f       	adc	r16, r16
    13d8:	11 1f       	adc	r17, r17
    13da:	0a 94       	dec	r0
    13dc:	d2 f7       	brpl	.-12     	; 0x13d2 <__floatsisf+0x8e>
    13de:	ed 82       	std	Y+5, r14	; 0x05
    13e0:	fe 82       	std	Y+6, r15	; 0x06
    13e2:	0f 83       	std	Y+7, r16	; 0x07
    13e4:	18 87       	std	Y+8, r17	; 0x08
    13e6:	c8 1a       	sub	r12, r24
    13e8:	d9 0a       	sbc	r13, r25
    13ea:	dc 82       	std	Y+4, r13	; 0x04
    13ec:	cb 82       	std	Y+3, r12	; 0x03
    13ee:	ba 82       	std	Y+2, r11	; 0x02
    13f0:	ce 01       	movw	r24, r28
    13f2:	01 96       	adiw	r24, 0x01	; 1
    13f4:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__pack_f>
    13f8:	28 96       	adiw	r28, 0x08	; 8
    13fa:	e9 e0       	ldi	r30, 0x09	; 9
    13fc:	0c 94 93 0c 	jmp	0x1926	; 0x1926 <__epilogue_restores__+0x12>

00001400 <__floatunsisf>:
    1400:	a8 e0       	ldi	r26, 0x08	; 8
    1402:	b0 e0       	ldi	r27, 0x00	; 0
    1404:	e6 e0       	ldi	r30, 0x06	; 6
    1406:	fa e0       	ldi	r31, 0x0A	; 10
    1408:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__prologue_saves__+0x10>
    140c:	7b 01       	movw	r14, r22
    140e:	8c 01       	movw	r16, r24
    1410:	61 15       	cp	r22, r1
    1412:	71 05       	cpc	r23, r1
    1414:	81 05       	cpc	r24, r1
    1416:	91 05       	cpc	r25, r1
    1418:	19 f4       	brne	.+6      	; 0x1420 <__floatunsisf+0x20>
    141a:	82 e0       	ldi	r24, 0x02	; 2
    141c:	89 83       	std	Y+1, r24	; 0x01
    141e:	60 c0       	rjmp	.+192    	; 0x14e0 <__floatunsisf+0xe0>
    1420:	83 e0       	ldi	r24, 0x03	; 3
    1422:	89 83       	std	Y+1, r24	; 0x01
    1424:	8e e1       	ldi	r24, 0x1E	; 30
    1426:	c8 2e       	mov	r12, r24
    1428:	d1 2c       	mov	r13, r1
    142a:	dc 82       	std	Y+4, r13	; 0x04
    142c:	cb 82       	std	Y+3, r12	; 0x03
    142e:	ed 82       	std	Y+5, r14	; 0x05
    1430:	fe 82       	std	Y+6, r15	; 0x06
    1432:	0f 83       	std	Y+7, r16	; 0x07
    1434:	18 87       	std	Y+8, r17	; 0x08
    1436:	c8 01       	movw	r24, r16
    1438:	b7 01       	movw	r22, r14
    143a:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__clzsi2>
    143e:	fc 01       	movw	r30, r24
    1440:	31 97       	sbiw	r30, 0x01	; 1
    1442:	f7 ff       	sbrs	r31, 7
    1444:	3b c0       	rjmp	.+118    	; 0x14bc <__floatunsisf+0xbc>
    1446:	22 27       	eor	r18, r18
    1448:	33 27       	eor	r19, r19
    144a:	2e 1b       	sub	r18, r30
    144c:	3f 0b       	sbc	r19, r31
    144e:	57 01       	movw	r10, r14
    1450:	68 01       	movw	r12, r16
    1452:	02 2e       	mov	r0, r18
    1454:	04 c0       	rjmp	.+8      	; 0x145e <__floatunsisf+0x5e>
    1456:	d6 94       	lsr	r13
    1458:	c7 94       	ror	r12
    145a:	b7 94       	ror	r11
    145c:	a7 94       	ror	r10
    145e:	0a 94       	dec	r0
    1460:	d2 f7       	brpl	.-12     	; 0x1456 <__floatunsisf+0x56>
    1462:	40 e0       	ldi	r20, 0x00	; 0
    1464:	50 e0       	ldi	r21, 0x00	; 0
    1466:	60 e0       	ldi	r22, 0x00	; 0
    1468:	70 e0       	ldi	r23, 0x00	; 0
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	a0 e0       	ldi	r26, 0x00	; 0
    1470:	b0 e0       	ldi	r27, 0x00	; 0
    1472:	04 c0       	rjmp	.+8      	; 0x147c <__floatunsisf+0x7c>
    1474:	88 0f       	add	r24, r24
    1476:	99 1f       	adc	r25, r25
    1478:	aa 1f       	adc	r26, r26
    147a:	bb 1f       	adc	r27, r27
    147c:	2a 95       	dec	r18
    147e:	d2 f7       	brpl	.-12     	; 0x1474 <__floatunsisf+0x74>
    1480:	01 97       	sbiw	r24, 0x01	; 1
    1482:	a1 09       	sbc	r26, r1
    1484:	b1 09       	sbc	r27, r1
    1486:	8e 21       	and	r24, r14
    1488:	9f 21       	and	r25, r15
    148a:	a0 23       	and	r26, r16
    148c:	b1 23       	and	r27, r17
    148e:	00 97       	sbiw	r24, 0x00	; 0
    1490:	a1 05       	cpc	r26, r1
    1492:	b1 05       	cpc	r27, r1
    1494:	21 f0       	breq	.+8      	; 0x149e <__floatunsisf+0x9e>
    1496:	41 e0       	ldi	r20, 0x01	; 1
    1498:	50 e0       	ldi	r21, 0x00	; 0
    149a:	60 e0       	ldi	r22, 0x00	; 0
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	4a 29       	or	r20, r10
    14a0:	5b 29       	or	r21, r11
    14a2:	6c 29       	or	r22, r12
    14a4:	7d 29       	or	r23, r13
    14a6:	4d 83       	std	Y+5, r20	; 0x05
    14a8:	5e 83       	std	Y+6, r21	; 0x06
    14aa:	6f 83       	std	Y+7, r22	; 0x07
    14ac:	78 87       	std	Y+8, r23	; 0x08
    14ae:	8e e1       	ldi	r24, 0x1E	; 30
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	8e 1b       	sub	r24, r30
    14b4:	9f 0b       	sbc	r25, r31
    14b6:	9c 83       	std	Y+4, r25	; 0x04
    14b8:	8b 83       	std	Y+3, r24	; 0x03
    14ba:	12 c0       	rjmp	.+36     	; 0x14e0 <__floatunsisf+0xe0>
    14bc:	30 97       	sbiw	r30, 0x00	; 0
    14be:	81 f0       	breq	.+32     	; 0x14e0 <__floatunsisf+0xe0>
    14c0:	0e 2e       	mov	r0, r30
    14c2:	04 c0       	rjmp	.+8      	; 0x14cc <__floatunsisf+0xcc>
    14c4:	ee 0c       	add	r14, r14
    14c6:	ff 1c       	adc	r15, r15
    14c8:	00 1f       	adc	r16, r16
    14ca:	11 1f       	adc	r17, r17
    14cc:	0a 94       	dec	r0
    14ce:	d2 f7       	brpl	.-12     	; 0x14c4 <__floatunsisf+0xc4>
    14d0:	ed 82       	std	Y+5, r14	; 0x05
    14d2:	fe 82       	std	Y+6, r15	; 0x06
    14d4:	0f 83       	std	Y+7, r16	; 0x07
    14d6:	18 87       	std	Y+8, r17	; 0x08
    14d8:	ce 1a       	sub	r12, r30
    14da:	df 0a       	sbc	r13, r31
    14dc:	dc 82       	std	Y+4, r13	; 0x04
    14de:	cb 82       	std	Y+3, r12	; 0x03
    14e0:	1a 82       	std	Y+2, r1	; 0x02
    14e2:	ce 01       	movw	r24, r28
    14e4:	01 96       	adiw	r24, 0x01	; 1
    14e6:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__pack_f>
    14ea:	28 96       	adiw	r28, 0x08	; 8
    14ec:	ea e0       	ldi	r30, 0x0A	; 10
    14ee:	0c 94 92 0c 	jmp	0x1924	; 0x1924 <__epilogue_restores__+0x10>

000014f2 <__clzsi2>:
    14f2:	ef 92       	push	r14
    14f4:	ff 92       	push	r15
    14f6:	0f 93       	push	r16
    14f8:	1f 93       	push	r17
    14fa:	7b 01       	movw	r14, r22
    14fc:	8c 01       	movw	r16, r24
    14fe:	80 e0       	ldi	r24, 0x00	; 0
    1500:	e8 16       	cp	r14, r24
    1502:	80 e0       	ldi	r24, 0x00	; 0
    1504:	f8 06       	cpc	r15, r24
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	08 07       	cpc	r16, r24
    150a:	80 e0       	ldi	r24, 0x00	; 0
    150c:	18 07       	cpc	r17, r24
    150e:	88 f4       	brcc	.+34     	; 0x1532 <__clzsi2+0x40>
    1510:	8f ef       	ldi	r24, 0xFF	; 255
    1512:	e8 16       	cp	r14, r24
    1514:	f1 04       	cpc	r15, r1
    1516:	01 05       	cpc	r16, r1
    1518:	11 05       	cpc	r17, r1
    151a:	31 f0       	breq	.+12     	; 0x1528 <__clzsi2+0x36>
    151c:	28 f0       	brcs	.+10     	; 0x1528 <__clzsi2+0x36>
    151e:	88 e0       	ldi	r24, 0x08	; 8
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	a0 e0       	ldi	r26, 0x00	; 0
    1524:	b0 e0       	ldi	r27, 0x00	; 0
    1526:	17 c0       	rjmp	.+46     	; 0x1556 <__clzsi2+0x64>
    1528:	80 e0       	ldi	r24, 0x00	; 0
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	a0 e0       	ldi	r26, 0x00	; 0
    152e:	b0 e0       	ldi	r27, 0x00	; 0
    1530:	12 c0       	rjmp	.+36     	; 0x1556 <__clzsi2+0x64>
    1532:	80 e0       	ldi	r24, 0x00	; 0
    1534:	e8 16       	cp	r14, r24
    1536:	80 e0       	ldi	r24, 0x00	; 0
    1538:	f8 06       	cpc	r15, r24
    153a:	80 e0       	ldi	r24, 0x00	; 0
    153c:	08 07       	cpc	r16, r24
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	18 07       	cpc	r17, r24
    1542:	28 f0       	brcs	.+10     	; 0x154e <__clzsi2+0x5c>
    1544:	88 e1       	ldi	r24, 0x18	; 24
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	a0 e0       	ldi	r26, 0x00	; 0
    154a:	b0 e0       	ldi	r27, 0x00	; 0
    154c:	04 c0       	rjmp	.+8      	; 0x1556 <__clzsi2+0x64>
    154e:	80 e1       	ldi	r24, 0x10	; 16
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	a0 e0       	ldi	r26, 0x00	; 0
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	20 e2       	ldi	r18, 0x20	; 32
    1558:	30 e0       	ldi	r19, 0x00	; 0
    155a:	40 e0       	ldi	r20, 0x00	; 0
    155c:	50 e0       	ldi	r21, 0x00	; 0
    155e:	28 1b       	sub	r18, r24
    1560:	39 0b       	sbc	r19, r25
    1562:	4a 0b       	sbc	r20, r26
    1564:	5b 0b       	sbc	r21, r27
    1566:	04 c0       	rjmp	.+8      	; 0x1570 <__clzsi2+0x7e>
    1568:	16 95       	lsr	r17
    156a:	07 95       	ror	r16
    156c:	f7 94       	ror	r15
    156e:	e7 94       	ror	r14
    1570:	8a 95       	dec	r24
    1572:	d2 f7       	brpl	.-12     	; 0x1568 <__clzsi2+0x76>
    1574:	f7 01       	movw	r30, r14
    1576:	e7 5d       	subi	r30, 0xD7	; 215
    1578:	fe 4f       	sbci	r31, 0xFE	; 254
    157a:	80 81       	ld	r24, Z
    157c:	28 1b       	sub	r18, r24
    157e:	31 09       	sbc	r19, r1
    1580:	41 09       	sbc	r20, r1
    1582:	51 09       	sbc	r21, r1
    1584:	c9 01       	movw	r24, r18
    1586:	1f 91       	pop	r17
    1588:	0f 91       	pop	r16
    158a:	ff 90       	pop	r15
    158c:	ef 90       	pop	r14
    158e:	08 95       	ret

00001590 <__pack_f>:
    1590:	df 92       	push	r13
    1592:	ef 92       	push	r14
    1594:	ff 92       	push	r15
    1596:	0f 93       	push	r16
    1598:	1f 93       	push	r17
    159a:	fc 01       	movw	r30, r24
    159c:	e4 80       	ldd	r14, Z+4	; 0x04
    159e:	f5 80       	ldd	r15, Z+5	; 0x05
    15a0:	06 81       	ldd	r16, Z+6	; 0x06
    15a2:	17 81       	ldd	r17, Z+7	; 0x07
    15a4:	d1 80       	ldd	r13, Z+1	; 0x01
    15a6:	80 81       	ld	r24, Z
    15a8:	82 30       	cpi	r24, 0x02	; 2
    15aa:	48 f4       	brcc	.+18     	; 0x15be <__pack_f+0x2e>
    15ac:	80 e0       	ldi	r24, 0x00	; 0
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	a0 e1       	ldi	r26, 0x10	; 16
    15b2:	b0 e0       	ldi	r27, 0x00	; 0
    15b4:	e8 2a       	or	r14, r24
    15b6:	f9 2a       	or	r15, r25
    15b8:	0a 2b       	or	r16, r26
    15ba:	1b 2b       	or	r17, r27
    15bc:	a5 c0       	rjmp	.+330    	; 0x1708 <__pack_f+0x178>
    15be:	84 30       	cpi	r24, 0x04	; 4
    15c0:	09 f4       	brne	.+2      	; 0x15c4 <__pack_f+0x34>
    15c2:	9f c0       	rjmp	.+318    	; 0x1702 <__pack_f+0x172>
    15c4:	82 30       	cpi	r24, 0x02	; 2
    15c6:	21 f4       	brne	.+8      	; 0x15d0 <__pack_f+0x40>
    15c8:	ee 24       	eor	r14, r14
    15ca:	ff 24       	eor	r15, r15
    15cc:	87 01       	movw	r16, r14
    15ce:	05 c0       	rjmp	.+10     	; 0x15da <__pack_f+0x4a>
    15d0:	e1 14       	cp	r14, r1
    15d2:	f1 04       	cpc	r15, r1
    15d4:	01 05       	cpc	r16, r1
    15d6:	11 05       	cpc	r17, r1
    15d8:	19 f4       	brne	.+6      	; 0x15e0 <__pack_f+0x50>
    15da:	e0 e0       	ldi	r30, 0x00	; 0
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	96 c0       	rjmp	.+300    	; 0x170c <__pack_f+0x17c>
    15e0:	62 81       	ldd	r22, Z+2	; 0x02
    15e2:	73 81       	ldd	r23, Z+3	; 0x03
    15e4:	9f ef       	ldi	r25, 0xFF	; 255
    15e6:	62 38       	cpi	r22, 0x82	; 130
    15e8:	79 07       	cpc	r23, r25
    15ea:	0c f0       	brlt	.+2      	; 0x15ee <__pack_f+0x5e>
    15ec:	5b c0       	rjmp	.+182    	; 0x16a4 <__pack_f+0x114>
    15ee:	22 e8       	ldi	r18, 0x82	; 130
    15f0:	3f ef       	ldi	r19, 0xFF	; 255
    15f2:	26 1b       	sub	r18, r22
    15f4:	37 0b       	sbc	r19, r23
    15f6:	2a 31       	cpi	r18, 0x1A	; 26
    15f8:	31 05       	cpc	r19, r1
    15fa:	2c f0       	brlt	.+10     	; 0x1606 <__pack_f+0x76>
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	40 e0       	ldi	r20, 0x00	; 0
    1602:	50 e0       	ldi	r21, 0x00	; 0
    1604:	2a c0       	rjmp	.+84     	; 0x165a <__pack_f+0xca>
    1606:	b8 01       	movw	r22, r16
    1608:	a7 01       	movw	r20, r14
    160a:	02 2e       	mov	r0, r18
    160c:	04 c0       	rjmp	.+8      	; 0x1616 <__pack_f+0x86>
    160e:	76 95       	lsr	r23
    1610:	67 95       	ror	r22
    1612:	57 95       	ror	r21
    1614:	47 95       	ror	r20
    1616:	0a 94       	dec	r0
    1618:	d2 f7       	brpl	.-12     	; 0x160e <__pack_f+0x7e>
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	a0 e0       	ldi	r26, 0x00	; 0
    1620:	b0 e0       	ldi	r27, 0x00	; 0
    1622:	04 c0       	rjmp	.+8      	; 0x162c <__pack_f+0x9c>
    1624:	88 0f       	add	r24, r24
    1626:	99 1f       	adc	r25, r25
    1628:	aa 1f       	adc	r26, r26
    162a:	bb 1f       	adc	r27, r27
    162c:	2a 95       	dec	r18
    162e:	d2 f7       	brpl	.-12     	; 0x1624 <__pack_f+0x94>
    1630:	01 97       	sbiw	r24, 0x01	; 1
    1632:	a1 09       	sbc	r26, r1
    1634:	b1 09       	sbc	r27, r1
    1636:	8e 21       	and	r24, r14
    1638:	9f 21       	and	r25, r15
    163a:	a0 23       	and	r26, r16
    163c:	b1 23       	and	r27, r17
    163e:	00 97       	sbiw	r24, 0x00	; 0
    1640:	a1 05       	cpc	r26, r1
    1642:	b1 05       	cpc	r27, r1
    1644:	21 f0       	breq	.+8      	; 0x164e <__pack_f+0xbe>
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	a0 e0       	ldi	r26, 0x00	; 0
    164c:	b0 e0       	ldi	r27, 0x00	; 0
    164e:	9a 01       	movw	r18, r20
    1650:	ab 01       	movw	r20, r22
    1652:	28 2b       	or	r18, r24
    1654:	39 2b       	or	r19, r25
    1656:	4a 2b       	or	r20, r26
    1658:	5b 2b       	or	r21, r27
    165a:	da 01       	movw	r26, r20
    165c:	c9 01       	movw	r24, r18
    165e:	8f 77       	andi	r24, 0x7F	; 127
    1660:	90 70       	andi	r25, 0x00	; 0
    1662:	a0 70       	andi	r26, 0x00	; 0
    1664:	b0 70       	andi	r27, 0x00	; 0
    1666:	80 34       	cpi	r24, 0x40	; 64
    1668:	91 05       	cpc	r25, r1
    166a:	a1 05       	cpc	r26, r1
    166c:	b1 05       	cpc	r27, r1
    166e:	39 f4       	brne	.+14     	; 0x167e <__pack_f+0xee>
    1670:	27 ff       	sbrs	r18, 7
    1672:	09 c0       	rjmp	.+18     	; 0x1686 <__pack_f+0xf6>
    1674:	20 5c       	subi	r18, 0xC0	; 192
    1676:	3f 4f       	sbci	r19, 0xFF	; 255
    1678:	4f 4f       	sbci	r20, 0xFF	; 255
    167a:	5f 4f       	sbci	r21, 0xFF	; 255
    167c:	04 c0       	rjmp	.+8      	; 0x1686 <__pack_f+0xf6>
    167e:	21 5c       	subi	r18, 0xC1	; 193
    1680:	3f 4f       	sbci	r19, 0xFF	; 255
    1682:	4f 4f       	sbci	r20, 0xFF	; 255
    1684:	5f 4f       	sbci	r21, 0xFF	; 255
    1686:	e0 e0       	ldi	r30, 0x00	; 0
    1688:	f0 e0       	ldi	r31, 0x00	; 0
    168a:	20 30       	cpi	r18, 0x00	; 0
    168c:	a0 e0       	ldi	r26, 0x00	; 0
    168e:	3a 07       	cpc	r19, r26
    1690:	a0 e0       	ldi	r26, 0x00	; 0
    1692:	4a 07       	cpc	r20, r26
    1694:	a0 e4       	ldi	r26, 0x40	; 64
    1696:	5a 07       	cpc	r21, r26
    1698:	10 f0       	brcs	.+4      	; 0x169e <__pack_f+0x10e>
    169a:	e1 e0       	ldi	r30, 0x01	; 1
    169c:	f0 e0       	ldi	r31, 0x00	; 0
    169e:	79 01       	movw	r14, r18
    16a0:	8a 01       	movw	r16, r20
    16a2:	27 c0       	rjmp	.+78     	; 0x16f2 <__pack_f+0x162>
    16a4:	60 38       	cpi	r22, 0x80	; 128
    16a6:	71 05       	cpc	r23, r1
    16a8:	64 f5       	brge	.+88     	; 0x1702 <__pack_f+0x172>
    16aa:	fb 01       	movw	r30, r22
    16ac:	e1 58       	subi	r30, 0x81	; 129
    16ae:	ff 4f       	sbci	r31, 0xFF	; 255
    16b0:	d8 01       	movw	r26, r16
    16b2:	c7 01       	movw	r24, r14
    16b4:	8f 77       	andi	r24, 0x7F	; 127
    16b6:	90 70       	andi	r25, 0x00	; 0
    16b8:	a0 70       	andi	r26, 0x00	; 0
    16ba:	b0 70       	andi	r27, 0x00	; 0
    16bc:	80 34       	cpi	r24, 0x40	; 64
    16be:	91 05       	cpc	r25, r1
    16c0:	a1 05       	cpc	r26, r1
    16c2:	b1 05       	cpc	r27, r1
    16c4:	39 f4       	brne	.+14     	; 0x16d4 <__pack_f+0x144>
    16c6:	e7 fe       	sbrs	r14, 7
    16c8:	0d c0       	rjmp	.+26     	; 0x16e4 <__pack_f+0x154>
    16ca:	80 e4       	ldi	r24, 0x40	; 64
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	a0 e0       	ldi	r26, 0x00	; 0
    16d0:	b0 e0       	ldi	r27, 0x00	; 0
    16d2:	04 c0       	rjmp	.+8      	; 0x16dc <__pack_f+0x14c>
    16d4:	8f e3       	ldi	r24, 0x3F	; 63
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	a0 e0       	ldi	r26, 0x00	; 0
    16da:	b0 e0       	ldi	r27, 0x00	; 0
    16dc:	e8 0e       	add	r14, r24
    16de:	f9 1e       	adc	r15, r25
    16e0:	0a 1f       	adc	r16, r26
    16e2:	1b 1f       	adc	r17, r27
    16e4:	17 ff       	sbrs	r17, 7
    16e6:	05 c0       	rjmp	.+10     	; 0x16f2 <__pack_f+0x162>
    16e8:	16 95       	lsr	r17
    16ea:	07 95       	ror	r16
    16ec:	f7 94       	ror	r15
    16ee:	e7 94       	ror	r14
    16f0:	31 96       	adiw	r30, 0x01	; 1
    16f2:	87 e0       	ldi	r24, 0x07	; 7
    16f4:	16 95       	lsr	r17
    16f6:	07 95       	ror	r16
    16f8:	f7 94       	ror	r15
    16fa:	e7 94       	ror	r14
    16fc:	8a 95       	dec	r24
    16fe:	d1 f7       	brne	.-12     	; 0x16f4 <__pack_f+0x164>
    1700:	05 c0       	rjmp	.+10     	; 0x170c <__pack_f+0x17c>
    1702:	ee 24       	eor	r14, r14
    1704:	ff 24       	eor	r15, r15
    1706:	87 01       	movw	r16, r14
    1708:	ef ef       	ldi	r30, 0xFF	; 255
    170a:	f0 e0       	ldi	r31, 0x00	; 0
    170c:	6e 2f       	mov	r22, r30
    170e:	67 95       	ror	r22
    1710:	66 27       	eor	r22, r22
    1712:	67 95       	ror	r22
    1714:	90 2f       	mov	r25, r16
    1716:	9f 77       	andi	r25, 0x7F	; 127
    1718:	d7 94       	ror	r13
    171a:	dd 24       	eor	r13, r13
    171c:	d7 94       	ror	r13
    171e:	8e 2f       	mov	r24, r30
    1720:	86 95       	lsr	r24
    1722:	49 2f       	mov	r20, r25
    1724:	46 2b       	or	r20, r22
    1726:	58 2f       	mov	r21, r24
    1728:	5d 29       	or	r21, r13
    172a:	b7 01       	movw	r22, r14
    172c:	ca 01       	movw	r24, r20
    172e:	1f 91       	pop	r17
    1730:	0f 91       	pop	r16
    1732:	ff 90       	pop	r15
    1734:	ef 90       	pop	r14
    1736:	df 90       	pop	r13
    1738:	08 95       	ret

0000173a <__unpack_f>:
    173a:	fc 01       	movw	r30, r24
    173c:	db 01       	movw	r26, r22
    173e:	40 81       	ld	r20, Z
    1740:	51 81       	ldd	r21, Z+1	; 0x01
    1742:	22 81       	ldd	r18, Z+2	; 0x02
    1744:	62 2f       	mov	r22, r18
    1746:	6f 77       	andi	r22, 0x7F	; 127
    1748:	70 e0       	ldi	r23, 0x00	; 0
    174a:	22 1f       	adc	r18, r18
    174c:	22 27       	eor	r18, r18
    174e:	22 1f       	adc	r18, r18
    1750:	93 81       	ldd	r25, Z+3	; 0x03
    1752:	89 2f       	mov	r24, r25
    1754:	88 0f       	add	r24, r24
    1756:	82 2b       	or	r24, r18
    1758:	28 2f       	mov	r18, r24
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	99 1f       	adc	r25, r25
    175e:	99 27       	eor	r25, r25
    1760:	99 1f       	adc	r25, r25
    1762:	11 96       	adiw	r26, 0x01	; 1
    1764:	9c 93       	st	X, r25
    1766:	11 97       	sbiw	r26, 0x01	; 1
    1768:	21 15       	cp	r18, r1
    176a:	31 05       	cpc	r19, r1
    176c:	a9 f5       	brne	.+106    	; 0x17d8 <__unpack_f+0x9e>
    176e:	41 15       	cp	r20, r1
    1770:	51 05       	cpc	r21, r1
    1772:	61 05       	cpc	r22, r1
    1774:	71 05       	cpc	r23, r1
    1776:	11 f4       	brne	.+4      	; 0x177c <__unpack_f+0x42>
    1778:	82 e0       	ldi	r24, 0x02	; 2
    177a:	37 c0       	rjmp	.+110    	; 0x17ea <__unpack_f+0xb0>
    177c:	82 e8       	ldi	r24, 0x82	; 130
    177e:	9f ef       	ldi	r25, 0xFF	; 255
    1780:	13 96       	adiw	r26, 0x03	; 3
    1782:	9c 93       	st	X, r25
    1784:	8e 93       	st	-X, r24
    1786:	12 97       	sbiw	r26, 0x02	; 2
    1788:	9a 01       	movw	r18, r20
    178a:	ab 01       	movw	r20, r22
    178c:	67 e0       	ldi	r22, 0x07	; 7
    178e:	22 0f       	add	r18, r18
    1790:	33 1f       	adc	r19, r19
    1792:	44 1f       	adc	r20, r20
    1794:	55 1f       	adc	r21, r21
    1796:	6a 95       	dec	r22
    1798:	d1 f7       	brne	.-12     	; 0x178e <__unpack_f+0x54>
    179a:	83 e0       	ldi	r24, 0x03	; 3
    179c:	8c 93       	st	X, r24
    179e:	0d c0       	rjmp	.+26     	; 0x17ba <__unpack_f+0x80>
    17a0:	22 0f       	add	r18, r18
    17a2:	33 1f       	adc	r19, r19
    17a4:	44 1f       	adc	r20, r20
    17a6:	55 1f       	adc	r21, r21
    17a8:	12 96       	adiw	r26, 0x02	; 2
    17aa:	8d 91       	ld	r24, X+
    17ac:	9c 91       	ld	r25, X
    17ae:	13 97       	sbiw	r26, 0x03	; 3
    17b0:	01 97       	sbiw	r24, 0x01	; 1
    17b2:	13 96       	adiw	r26, 0x03	; 3
    17b4:	9c 93       	st	X, r25
    17b6:	8e 93       	st	-X, r24
    17b8:	12 97       	sbiw	r26, 0x02	; 2
    17ba:	20 30       	cpi	r18, 0x00	; 0
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	38 07       	cpc	r19, r24
    17c0:	80 e0       	ldi	r24, 0x00	; 0
    17c2:	48 07       	cpc	r20, r24
    17c4:	80 e4       	ldi	r24, 0x40	; 64
    17c6:	58 07       	cpc	r21, r24
    17c8:	58 f3       	brcs	.-42     	; 0x17a0 <__unpack_f+0x66>
    17ca:	14 96       	adiw	r26, 0x04	; 4
    17cc:	2d 93       	st	X+, r18
    17ce:	3d 93       	st	X+, r19
    17d0:	4d 93       	st	X+, r20
    17d2:	5c 93       	st	X, r21
    17d4:	17 97       	sbiw	r26, 0x07	; 7
    17d6:	08 95       	ret
    17d8:	2f 3f       	cpi	r18, 0xFF	; 255
    17da:	31 05       	cpc	r19, r1
    17dc:	79 f4       	brne	.+30     	; 0x17fc <__unpack_f+0xc2>
    17de:	41 15       	cp	r20, r1
    17e0:	51 05       	cpc	r21, r1
    17e2:	61 05       	cpc	r22, r1
    17e4:	71 05       	cpc	r23, r1
    17e6:	19 f4       	brne	.+6      	; 0x17ee <__unpack_f+0xb4>
    17e8:	84 e0       	ldi	r24, 0x04	; 4
    17ea:	8c 93       	st	X, r24
    17ec:	08 95       	ret
    17ee:	64 ff       	sbrs	r22, 4
    17f0:	03 c0       	rjmp	.+6      	; 0x17f8 <__unpack_f+0xbe>
    17f2:	81 e0       	ldi	r24, 0x01	; 1
    17f4:	8c 93       	st	X, r24
    17f6:	12 c0       	rjmp	.+36     	; 0x181c <__unpack_f+0xe2>
    17f8:	1c 92       	st	X, r1
    17fa:	10 c0       	rjmp	.+32     	; 0x181c <__unpack_f+0xe2>
    17fc:	2f 57       	subi	r18, 0x7F	; 127
    17fe:	30 40       	sbci	r19, 0x00	; 0
    1800:	13 96       	adiw	r26, 0x03	; 3
    1802:	3c 93       	st	X, r19
    1804:	2e 93       	st	-X, r18
    1806:	12 97       	sbiw	r26, 0x02	; 2
    1808:	83 e0       	ldi	r24, 0x03	; 3
    180a:	8c 93       	st	X, r24
    180c:	87 e0       	ldi	r24, 0x07	; 7
    180e:	44 0f       	add	r20, r20
    1810:	55 1f       	adc	r21, r21
    1812:	66 1f       	adc	r22, r22
    1814:	77 1f       	adc	r23, r23
    1816:	8a 95       	dec	r24
    1818:	d1 f7       	brne	.-12     	; 0x180e <__unpack_f+0xd4>
    181a:	70 64       	ori	r23, 0x40	; 64
    181c:	14 96       	adiw	r26, 0x04	; 4
    181e:	4d 93       	st	X+, r20
    1820:	5d 93       	st	X+, r21
    1822:	6d 93       	st	X+, r22
    1824:	7c 93       	st	X, r23
    1826:	17 97       	sbiw	r26, 0x07	; 7
    1828:	08 95       	ret

0000182a <__fpcmp_parts_f>:
    182a:	1f 93       	push	r17
    182c:	dc 01       	movw	r26, r24
    182e:	fb 01       	movw	r30, r22
    1830:	9c 91       	ld	r25, X
    1832:	92 30       	cpi	r25, 0x02	; 2
    1834:	08 f4       	brcc	.+2      	; 0x1838 <__fpcmp_parts_f+0xe>
    1836:	47 c0       	rjmp	.+142    	; 0x18c6 <__fpcmp_parts_f+0x9c>
    1838:	80 81       	ld	r24, Z
    183a:	82 30       	cpi	r24, 0x02	; 2
    183c:	08 f4       	brcc	.+2      	; 0x1840 <__fpcmp_parts_f+0x16>
    183e:	43 c0       	rjmp	.+134    	; 0x18c6 <__fpcmp_parts_f+0x9c>
    1840:	94 30       	cpi	r25, 0x04	; 4
    1842:	51 f4       	brne	.+20     	; 0x1858 <__fpcmp_parts_f+0x2e>
    1844:	11 96       	adiw	r26, 0x01	; 1
    1846:	1c 91       	ld	r17, X
    1848:	84 30       	cpi	r24, 0x04	; 4
    184a:	99 f5       	brne	.+102    	; 0x18b2 <__fpcmp_parts_f+0x88>
    184c:	81 81       	ldd	r24, Z+1	; 0x01
    184e:	68 2f       	mov	r22, r24
    1850:	70 e0       	ldi	r23, 0x00	; 0
    1852:	61 1b       	sub	r22, r17
    1854:	71 09       	sbc	r23, r1
    1856:	3f c0       	rjmp	.+126    	; 0x18d6 <__fpcmp_parts_f+0xac>
    1858:	84 30       	cpi	r24, 0x04	; 4
    185a:	21 f0       	breq	.+8      	; 0x1864 <__fpcmp_parts_f+0x3a>
    185c:	92 30       	cpi	r25, 0x02	; 2
    185e:	31 f4       	brne	.+12     	; 0x186c <__fpcmp_parts_f+0x42>
    1860:	82 30       	cpi	r24, 0x02	; 2
    1862:	b9 f1       	breq	.+110    	; 0x18d2 <__fpcmp_parts_f+0xa8>
    1864:	81 81       	ldd	r24, Z+1	; 0x01
    1866:	88 23       	and	r24, r24
    1868:	89 f1       	breq	.+98     	; 0x18cc <__fpcmp_parts_f+0xa2>
    186a:	2d c0       	rjmp	.+90     	; 0x18c6 <__fpcmp_parts_f+0x9c>
    186c:	11 96       	adiw	r26, 0x01	; 1
    186e:	1c 91       	ld	r17, X
    1870:	11 97       	sbiw	r26, 0x01	; 1
    1872:	82 30       	cpi	r24, 0x02	; 2
    1874:	f1 f0       	breq	.+60     	; 0x18b2 <__fpcmp_parts_f+0x88>
    1876:	81 81       	ldd	r24, Z+1	; 0x01
    1878:	18 17       	cp	r17, r24
    187a:	d9 f4       	brne	.+54     	; 0x18b2 <__fpcmp_parts_f+0x88>
    187c:	12 96       	adiw	r26, 0x02	; 2
    187e:	2d 91       	ld	r18, X+
    1880:	3c 91       	ld	r19, X
    1882:	13 97       	sbiw	r26, 0x03	; 3
    1884:	82 81       	ldd	r24, Z+2	; 0x02
    1886:	93 81       	ldd	r25, Z+3	; 0x03
    1888:	82 17       	cp	r24, r18
    188a:	93 07       	cpc	r25, r19
    188c:	94 f0       	brlt	.+36     	; 0x18b2 <__fpcmp_parts_f+0x88>
    188e:	28 17       	cp	r18, r24
    1890:	39 07       	cpc	r19, r25
    1892:	bc f0       	brlt	.+46     	; 0x18c2 <__fpcmp_parts_f+0x98>
    1894:	14 96       	adiw	r26, 0x04	; 4
    1896:	8d 91       	ld	r24, X+
    1898:	9d 91       	ld	r25, X+
    189a:	0d 90       	ld	r0, X+
    189c:	bc 91       	ld	r27, X
    189e:	a0 2d       	mov	r26, r0
    18a0:	24 81       	ldd	r18, Z+4	; 0x04
    18a2:	35 81       	ldd	r19, Z+5	; 0x05
    18a4:	46 81       	ldd	r20, Z+6	; 0x06
    18a6:	57 81       	ldd	r21, Z+7	; 0x07
    18a8:	28 17       	cp	r18, r24
    18aa:	39 07       	cpc	r19, r25
    18ac:	4a 07       	cpc	r20, r26
    18ae:	5b 07       	cpc	r21, r27
    18b0:	18 f4       	brcc	.+6      	; 0x18b8 <__fpcmp_parts_f+0x8e>
    18b2:	11 23       	and	r17, r17
    18b4:	41 f0       	breq	.+16     	; 0x18c6 <__fpcmp_parts_f+0x9c>
    18b6:	0a c0       	rjmp	.+20     	; 0x18cc <__fpcmp_parts_f+0xa2>
    18b8:	82 17       	cp	r24, r18
    18ba:	93 07       	cpc	r25, r19
    18bc:	a4 07       	cpc	r26, r20
    18be:	b5 07       	cpc	r27, r21
    18c0:	40 f4       	brcc	.+16     	; 0x18d2 <__fpcmp_parts_f+0xa8>
    18c2:	11 23       	and	r17, r17
    18c4:	19 f0       	breq	.+6      	; 0x18cc <__fpcmp_parts_f+0xa2>
    18c6:	61 e0       	ldi	r22, 0x01	; 1
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	05 c0       	rjmp	.+10     	; 0x18d6 <__fpcmp_parts_f+0xac>
    18cc:	6f ef       	ldi	r22, 0xFF	; 255
    18ce:	7f ef       	ldi	r23, 0xFF	; 255
    18d0:	02 c0       	rjmp	.+4      	; 0x18d6 <__fpcmp_parts_f+0xac>
    18d2:	60 e0       	ldi	r22, 0x00	; 0
    18d4:	70 e0       	ldi	r23, 0x00	; 0
    18d6:	cb 01       	movw	r24, r22
    18d8:	1f 91       	pop	r17
    18da:	08 95       	ret

000018dc <__prologue_saves__>:
    18dc:	2f 92       	push	r2
    18de:	3f 92       	push	r3
    18e0:	4f 92       	push	r4
    18e2:	5f 92       	push	r5
    18e4:	6f 92       	push	r6
    18e6:	7f 92       	push	r7
    18e8:	8f 92       	push	r8
    18ea:	9f 92       	push	r9
    18ec:	af 92       	push	r10
    18ee:	bf 92       	push	r11
    18f0:	cf 92       	push	r12
    18f2:	df 92       	push	r13
    18f4:	ef 92       	push	r14
    18f6:	ff 92       	push	r15
    18f8:	0f 93       	push	r16
    18fa:	1f 93       	push	r17
    18fc:	cf 93       	push	r28
    18fe:	df 93       	push	r29
    1900:	cd b7       	in	r28, 0x3d	; 61
    1902:	de b7       	in	r29, 0x3e	; 62
    1904:	ca 1b       	sub	r28, r26
    1906:	db 0b       	sbc	r29, r27
    1908:	0f b6       	in	r0, 0x3f	; 63
    190a:	f8 94       	cli
    190c:	de bf       	out	0x3e, r29	; 62
    190e:	0f be       	out	0x3f, r0	; 63
    1910:	cd bf       	out	0x3d, r28	; 61
    1912:	09 94       	ijmp

00001914 <__epilogue_restores__>:
    1914:	2a 88       	ldd	r2, Y+18	; 0x12
    1916:	39 88       	ldd	r3, Y+17	; 0x11
    1918:	48 88       	ldd	r4, Y+16	; 0x10
    191a:	5f 84       	ldd	r5, Y+15	; 0x0f
    191c:	6e 84       	ldd	r6, Y+14	; 0x0e
    191e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1920:	8c 84       	ldd	r8, Y+12	; 0x0c
    1922:	9b 84       	ldd	r9, Y+11	; 0x0b
    1924:	aa 84       	ldd	r10, Y+10	; 0x0a
    1926:	b9 84       	ldd	r11, Y+9	; 0x09
    1928:	c8 84       	ldd	r12, Y+8	; 0x08
    192a:	df 80       	ldd	r13, Y+7	; 0x07
    192c:	ee 80       	ldd	r14, Y+6	; 0x06
    192e:	fd 80       	ldd	r15, Y+5	; 0x05
    1930:	0c 81       	ldd	r16, Y+4	; 0x04
    1932:	1b 81       	ldd	r17, Y+3	; 0x03
    1934:	aa 81       	ldd	r26, Y+2	; 0x02
    1936:	b9 81       	ldd	r27, Y+1	; 0x01
    1938:	ce 0f       	add	r28, r30
    193a:	d1 1d       	adc	r29, r1
    193c:	0f b6       	in	r0, 0x3f	; 63
    193e:	f8 94       	cli
    1940:	de bf       	out	0x3e, r29	; 62
    1942:	0f be       	out	0x3f, r0	; 63
    1944:	cd bf       	out	0x3d, r28	; 61
    1946:	ed 01       	movw	r28, r26
    1948:	08 95       	ret

0000194a <__eerd_byte_m328p>:
    194a:	f9 99       	sbic	0x1f, 1	; 31
    194c:	fe cf       	rjmp	.-4      	; 0x194a <__eerd_byte_m328p>
    194e:	92 bd       	out	0x22, r25	; 34
    1950:	81 bd       	out	0x21, r24	; 33
    1952:	f8 9a       	sbi	0x1f, 0	; 31
    1954:	99 27       	eor	r25, r25
    1956:	80 b5       	in	r24, 0x20	; 32
    1958:	08 95       	ret

0000195a <__eewr_byte_m328p>:
    195a:	26 2f       	mov	r18, r22

0000195c <__eewr_r18_m328p>:
    195c:	f9 99       	sbic	0x1f, 1	; 31
    195e:	fe cf       	rjmp	.-4      	; 0x195c <__eewr_r18_m328p>
    1960:	1f ba       	out	0x1f, r1	; 31
    1962:	92 bd       	out	0x22, r25	; 34
    1964:	81 bd       	out	0x21, r24	; 33
    1966:	20 bd       	out	0x20, r18	; 32
    1968:	0f b6       	in	r0, 0x3f	; 63
    196a:	f8 94       	cli
    196c:	fa 9a       	sbi	0x1f, 2	; 31
    196e:	f9 9a       	sbi	0x1f, 1	; 31
    1970:	0f be       	out	0x3f, r0	; 63
    1972:	01 96       	adiw	r24, 0x01	; 1
    1974:	08 95       	ret

00001976 <_exit>:
    1976:	f8 94       	cli

00001978 <__stop_program>:
    1978:	ff cf       	rjmp	.-2      	; 0x1978 <__stop_program>
